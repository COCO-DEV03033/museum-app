{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils.ts","webpack:///./src/index.ts","webpack:///./src/puzzle-generator.ts","webpack:///./src/drag-handler.ts","webpack:///./src/xml-clone.ts","webpack:///./src/certificate.ts","webpack:///./src/dropzone.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","NS_SVG","NS_XHTML","CDATA_END","String","fromCharCode","spaceMatcher","trimmableMatcher","styleSpaceMatcher","round","Math","Number","EPSILON","getUrl","blob","Promise","resolve","reject","reader","FileReader","readAsDataURL","addEventListener","result","Error","getImageDimensions","src","img","Image","width","naturalWidth","height","naturalHeight","clearChildren","node","textContent","hasChildNodes","removeChild","firstChild","formatNumber","digits","toString","padStart","formatTime","time","absTime","abs","floor","formatDateTime","date","Date","yr","getFullYear","mo","getMonth","dy","getDate","hr","getHours","mi","getMinutes","se","getSeconds","getSeed","seed","hash","length","imul","charCodeAt","transferChildren","dest","childElementCount","frag","ownerDocument","createDocumentFragment","Array","from","childNodes","forEach","appendChild","interceptEvent","e","cancelable","defaultPrevented","preventDefault","stopPropagation","toPromise","thisArg","args","findStyle","selector","root","window","document","styleElements","querySelectorAll","lastSheet","sheet","j","rules","rule","type","CSSRule","STYLE_RULE","targetSelector","selectorText","split","trim","documentElement","SVGElement","createElementNS","head","createElement","index","insertRule","cssRules","pathIdMatcher","MainHandler","baseTime","theshold","_xc","_yc","querySelector","classList","remove","this","registerDropZone","Document","masksElement","uiScaleRule","pathGroup","instanceGroup","timeDisp","dataElement","menuGroup","menuForm","onMenuSubmit","onMenuReset","onPaste","onDragDrop","imageSelector","onImageSelected","colSelector","onColChange","rowSelector","onRowChange","sizeCountDisplay","fixedPatternCheckbox","imagePreview","submitButton","menu","save","imageElement","onWindowResize","assign","registerDraggable","onDrag","onDrop","load","isFinite","blobOrSrc","Blob","imageUrl","xCount","valueAsNumber","yCount","onSizeChange","startsWith","URL","revokeObjectURL","createObjectURL","disabled","max","sqrt","hideCetificate","unitSize","startTime","calculateTheshold","endTime","resumeTime","timer","clearInterval","paths","JigsawGenerator","radius","min","fixedPattern","checked","toSvgElements","viewWidth","viewHeight","setAttribute","href","baseVal","defs","path","mask","id","maskPath","instance","add","base","decoPath","exec","w","h","transform","appendItem","createSVGTransform","setTranslate","random","parseInt","serializeToData","element","setInterval","updateTime","state","target","parentNode","x","y","checkAndMerge","lastElement","removeItem","showCertificate","current","next","other","closest","isDragging","t1","numberOfItems","t2","m1","getItem","matrix","m2","f","currentIsGroup","contains","otherIsGroup","newGroup","now","getTime","data","JSON","parse","stringify","downloadDocument","beforeSave","files","file","item","updateImage","init","reset","innerWidth","innerHeight","viewBox","viewRatio","windowRatio","scale","devicePixelRatio","style","clipboardData","dataTransfer","loaded","items","kind","getAsFile","row","getAsString","fetch","setScale","svgArgsCount","M","L","H","V","v","C","S","Q","q","T","A","a","z","options","strokes","Map","b","flip","tabSize","jitter","trunc","MAX_SAFE_INTEGER","sl","sw","vertical","yi","first","xi","pushStroke","generateStroke","points","inst","cells","stroke","getNormalizedStroke","clear","parent","fragment","elm","push","reverse","p0l","p0w","p1l","p1w","p2l","p2w","p3l","p3w","p4l","p4w","p5l","p5w","p6l","p6w","p7l","p7w","p8l","p8w","p9l","p9w","sin","nextJitter","filp","ol","ow","set","strokeSet","Set","size","found","delete","splice","slice","join","draggableClass","handlerClass","draggingElements","states","onMouseStartDrag","onMouseDragging","onMouseEndDrag","onTouchStartDrag","capture","passive","onTouchDragging","onTouchEndDrag","getState","identifier","MouseEvent","getHandlerTarget","Element","SVGGraphicsElement","button","handleStartDrag","ctrlKey","shiftKey","pointer","targetTouches","forceBringToFront","ownerSVGElement","matches","has","transforms","SVGTransform","SVG_TRANSFORM_TRANSLATE","insertItemBefore","offset","getLocalPoint","matrixTransform","inverse","offsetX","offsetY","nextSibling","bringToFrontAfter","handleDrag","changedTouches","map","includes","coord","handleEndDrag","createSVGPoint","clientX","clientY","getScreenCTM","async","treatments","implementation","createDocument","clone","importNode","replaceChild","all","resolveScript","minifyStyle","removeWhiteSpaces","XMLSerializer","serializeToString","download","click","script","HTMLScriptElement","removeAttribute","text","SVGScriptElement","createCDATASection","treeWalker","createTreeWalker","NodeFilter","SHOW_TEXT","removals","checkSpaces","nextNode","Text","CDATASection","test","wholeText","whiteSpace","original","changed","replaceAll","replaceWith","createTextNode","child","cdata","certificate","timeStartElement","timeEndElement","timeUsedElement","puzzleSizeElement","mainHandler","dropCallback","dragEnterCallback","dragOverCallback","dragLeaveCallback","dragOverFallbackHandler","defaultDragOverHandler","wrapDragEvent","callback","dropEffect"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GAAW,CAC9B,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,EAAG,MACHH,QAAS,IAIVI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,EAAI,KAGX,OAAOF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC/C,IAAIZ,EAAoBa,EAAEX,EAASS,GAAO,CACzCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,WAAY,KAAMC,IAAKL,MAKhEZ,EAAoBkB,EAAI,SAAShB,GAChC,UAAUiB,SAAW,aAAeA,OAAOC,YAAa,CACvDN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,MAAO,QAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GACvC,GAAGA,EAAO,EAAGF,EAAQrB,EAAoBqB,GACzC,GAAGE,EAAO,EAAG,OAAOF,EACpB,GAAIE,EAAO,UAAaF,IAAU,UAAYA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MACvB1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,WAAY,KAAMK,MAAOA,IAChE,GAAGE,EAAO,UAAYF,GAAS,SAAU,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,SAASM,IAAe,OAAO3B,EAAO,YACtC,SAAS4B,IAAqB,OAAO5B,GACtCH,EAAoBU,EAAEE,EAAQ,IAAKA,GACnC,OAAOA,GAIRZ,EAAoBa,EAAI,SAASmB,EAAQC,GAAY,OAAOnB,OAAOoB,UAAUC,eAAe5B,KAAKyB,EAAQC,IAGzGjC,EAAoBoC,EAAI,GAIxB,OAAOpC,EAAoBA,EAAoBqC,EAAI,I;mRClFxC,EAAAC,OAAS,6BACT,EAAAC,SAAW,+BACX,EAAAC,UAAYC,OAAOC,aAAa,GAAM,GAAM,IAE5C,EAAAC,aAAe,QACf,EAAAC,iBAAmB,aACnB,EAAAC,kBAAoB,qCAEjC,SAAgBC,EAAMjB,EAAWpB,EAAI,GACnCA,EAAI,IAAMA,EACV,OAAOsC,KAAKD,OAAOjB,EAAImB,OAAOC,SAAWxC,GAAKA,EAFhD,UAKA,SAAgByC,EAAOC,GACrB,OAAO,IAAIC,QAAgB,CAACC,EAASC,KACnC,MAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,GACrBI,EAAOG,iBAAiB,UAAW,IACjCL,EAAQE,EAAOI,SACjBJ,EAAOG,iBAAiB,QAAS,IAC/BJ,EAAO,IAAIM,MAAM,oCAPvB,WAWA,SAAgBC,EAAmBC,GACjC,OAAO,IAAIV,QAA4C,CAACC,EAASC,KAC/D,MAAMS,EAAM,IAAIC,MAChBD,EAAID,IAAMA,EACVC,EAAIL,iBAAiB,OAAQ,IAAML,EAAQ,CACzCY,MAAOF,EAAIG,aACXC,OAAQJ,EAAIK;CAEdL,EAAIL,iBAAiB,QAAS,IAC5BJ,EAAO,IAAIM,MAAM,sCATvB,uBAaA,SAAgBS,EAAcC,GAC5BA,EAAKC,YAAc,GACnB,MAAMD,EAAKE,gBACTF,EAAKG,YAAYH,EAAKI,YAH1B,kBAMA,SAAgBC,EAAa9C,EAAW+C,GACtC,OAAO/C,EAAEgD,SAAS,IAAIC,SAASF,EAAQ,KADzC,iBAIA,SAAgBG,EAAWC,GACzB,MAAMC,EAAUlC,KAAKmC,IAAIF,GACzB,IAAIrB,EAAS,GACXgB,EAAa5B,KAAKoC,MAAMF,EAAU,IAAM,IAAK,MAE7CN,EAAa5B,KAAKoC,MAAMF,EAAU,IAAM,IAAK,KAE/C,GAAGD,EAAO,KAAM,OAAQA,EAAO,EAAI,IAAM,IAAMrB,EAC/CA,EAAS,GACPgB,EAAa5B,KAAKoC,MAAMF,EAAU,KAAO,IAAK,MAC5CtB,IACJ,GAAGqB,EAAO,MAAO,OAAQA,EAAO,EAAI,IAAM,IAAMrB,EAChD,MAAO,GACLgB,EAAa5B,KAAKoC,MAAMH,EAAO,OAAQ,OACpCrB,IAdP,eAiBA,SAAgByB,EAAeC,EAAa,IAAIC,MAC9C,MAAMC,EAAKF,EAAKG,cAChB,MAAMC,EAAKJ,EAAKK,WAChB,MAAMC,EAAKN,EAAKO,UAChB,MAAMC,EAAKR,EAAKS,WAChB,MAAMC,EAAKV,EAAKW,aAChB,MAAMC,EAAKZ,EAAKa,aAChB,MAAO,GACLvB,EAAagB,EAAI,MAEjBhB,EAAac,EAAK,EAAG,MAErBd,EAAaY,EAAI,MAEjBZ,EAAakB,EAAK,IAAM,GAAI,MAE5BlB,EAAaoB,EAAI,MAEjBpB,EAAasB,EAAI,MACfJ,GAAM,GAAK,KAAO,OAnBxB,mBAsBA,SAAgBM,EAAQC,GACtB,cAAcA,GACZ,IAAK,YACL,IAAK,SACH,GAAGA,GAAQ,KACTA,EAAO,GACX,QACEA,EAAOA,EAAKvB,WACd,IAAK,SAAU,CACb,IAAIwB,EAAO,EACX,IAAI,IAAIjG,EAAI,EAAGA,EAAIgG,EAAKE,OAAQlG,IAC9BiG,EAAOtD,KAAKwD,KAAK,GAAIF,GAAQD,EAAKI,WAAWpG,GAAK,EACpDgG,EAAOC,GAGX,OAAOD,EAfT;CAkBA,SAAgBK,EAAiB3C,EAAc4C,GAC7C,IAAI5C,EAAI6C,kBAAmB,OAC3B,MAAMC,EAAO9C,EAAI+C,cAAcC,yBAC/BC,MAAMC,KAAKlD,EAAImD,YAAYC,QAAQN,EAAKO,YAAaP,GACrDF,EAAKS,YAAYP,GAJnB,qBAOA,SAAgBQ,EAAeC,GAC7B,GAAGA,EAAEC,aAAeD,EAAEE,iBACpBF,EAAEG,iBACJH,EAAEI,kBAHJ,mBAQA,SAAgBC,EAAUC,EAAc7D,KAAkC8D,GACxE,OAAO,IAAIxE,QAAQC,GAAWS,EAAIvD,KAAKoH,KAAYC,EAAMvE,IAD3D,cAIA,SAAgBwE,EAAUC,EAAkBC,EAA4BC,OAAOC,U,MAC7E,MAAMC,EAAgBH,EAAKI,iBAAsC,SACjE,IAAIC,EACJ,IAAI,IAAIhI,EAAI8H,EAAc5B,OAAS,EAAGlG,GAAK,EAAGA,IAAK,CACjD,MAAM,MAAEiI,GAAUH,EAAc9H,GAChC,IAAIiI,EAAO,SACX,IAAID,EAAWA,EAAYC,EAC3B,IAAI,IAAIC,EAAID,EAAME,MAAMjC,OAAS,EAAGgC,GAAK,EAAGA,IAAK,CAC/C,MAAME,EAAOH,EAAME,MAAMD,GACzB,GAAGE,EAAKC,OAASC,QAAQC,WACvB,SACF,IAAI,MAAMC,KAAmBJ,EAAsBK,aAAaC,MAAM,KACpE,GAAGF,EAAeG,SAAWjB,EAC3B,OAAOU,GAGf,IAAIJ,EAAW,CACb,MAAMH,GAAQ,EAAGF,EAAKlB,iBAAa,mBAAIkB,EACvCK,GACGH,EAASe,2BAA2BC,WACpChB,EAASd,YAAYc,EAASiB,gBAAgB,EAAA5G,OAAQ,UACvD2F,EAASkB,KAAKhC,YAAYc,EAASmB,cAAc,WACjDf,MAEJ,MAAMgB,EAAQjB,EAAUkB,WAAW,GAAGxB,OAAeM,EAAUG,MAAMjC,OAAS,GAC9E,OAAO8B,EAAUmB,SAASF,GAzB5B,e;yEC3HA,aACA,aACA,aACA,aACA,aACA,aAEA,MAAMG,EAAgB,iBAYtB,MAAaC,EAyDX,YAAY1B,EAAgDE,U,UApC5D,KAAAhE,MAAgB,EAChB,KAAAE,OAAiB,EACjB,KAAAuF,SAAmB,EACnB,KAAAC,SAAmB,EACnB,KAAA3E,KAAe,EAIP,KAAA4E,IAAc,EACd,KAAAC,IAAc,GA4BpB,EAAA9B,EAAK+B,cAAc,gBAAY,0BAAEC,UAAUC,OAAO,YAClDC,KAAKlC,KAAOA,EAAK+B,cAAc,OAC/B,EAAAI,iBAAiBD,KAAKlC,MACtBkC,KAAKhC,SAAWF,aAAgBoC,SAAWpC,EAAOkC,KAAKlC,KAAKlB,cAC5DoD,KAAKG,aAAerC,EAAK+B,cAA2B,QACpDG,KAAKI,YAAc,EAAAxC,UAAU,QAASE,GACtCkC,KAAKK,UAAYvC,EAAK+B,cAA2B,QACjDG,KAAKM,cAAgBxC,EAAK+B,cAA2B,SACrDG,KAAKO,SAAWzC,EAAK+B,cAA8B,aACnDG,KAAKQ,YAAc1C,EAAK+B,cAAgC,eACxDG,KAAKS,UAAY3C,EAAK+B,cAA2B,SACjDG,KAAKU,SAAW5C,EAAK+B,cAA+B,iBACpDG,KAAKU,SAASjH,iBAAiB,SAAUuG,KAAKW,aAAahJ,KAAKqI,OAChEA,KAAKU,SAASjH,iBAAiB,QAASuG,KAAKY,YAAYjJ,KAAKqI;CAC9DA,KAAKlC,KAAKrE,iBAAiB,QAASuG,KAAKa,QAAQlJ,KAAKqI,MAAO,MAC7D,EAAAC,iBAAiBD,KAAKlC,KAAK+B,cAA0B,SAAWG,KAAKc,WAAWnJ,KAAKqI,OACrFA,KAAKe,cAAgBf,KAAKU,SAASb,cAAgC,qBACnEG,KAAKe,cAActH,iBAAiB,SAAUuG,KAAKgB,gBAAgBrJ,KAAKqI,OACxEA,KAAKiB,YAAcjB,KAAKU,SAASb,cAAgC,mBACjE,MAAMqB,EAAclB,KAAKkB,YAAYvJ,KAAKqI,MAC1CA,KAAKiB,YAAYxH,iBAAiB,SAAUyH,GAC5ClB,KAAKiB,YAAYxH,iBAAiB,OAAQyH,GAC1ClB,KAAKmB,YAAcnB,KAAKU,SAASb,cAAgC,mBACjE,MAAMuB,EAAcpB,KAAKoB,YAAYzJ,KAAKqI,MAC1CA,KAAKmB,YAAY1H,iBAAiB,SAAU2H,GAC5CpB,KAAKmB,YAAY1H,iBAAiB,OAAQ2H,GAC1CpB,KAAKqB,iBAAmBrB,KAAKU,SAASb,cAA+B,eACrEG,KAAKsB,qBAAuBtB,KAAKU,SAASb,cAAgC,uBAC1EG,KAAKuB,aAAevB,KAAKU,SAASb,cAAgC,eAClEG,KAAKwB,aAAexB,KAAKU,SAASb,cAAiC;EACnE,EAAAG,KAAKlC,KAAK+B,cAAc,gBAAY,0BAAEpG,iBAAiB,QAASuG,KAAKyB,KAAK9J,KAAKqI,QAC/E,EAAAA,KAAKlC,KAAK+B,cAAc,iBAAa,0BAAEpG,iBAAiB,QAASuG,KAAK0B,KAAK/J,KAAKqI,OAChFA,KAAK2B,aAAe7D,EAAK+B,cAA+B,aACxD9B,OAAOtE,iBAAiB,SAAUuG,KAAK4B,eAAejK,KAAKqI,OAC3DnJ,OAAOgL,OAAO7B,KAAM,EAAA8B,kBAClBhE,EAAMkC,KAAK+B,OAAOpK,KAAKqI,MAAOA,KAAKgC,OAAOrK,KAAKqI,QAEjDA,KAAKiC,OACLjC,KAAK4B,iBA/DP,aACE,OAAO5B,KAAKL,IAEd,WAAWvI,GACT4I,KAAKL,IAAMvI,EACX4I,KAAKJ,IAAM9G,KAAKD,MAAMzB,EAAQ4I,KAAKhG,MAAQgG,KAAK9F,QAChD,GAAG8F,KAAKJ,IAAM,IAAM7G,OAAOmJ,SAASlC,KAAKJ,KAAM,CAC7CI,KAAKL,IAAM7G,KAAKD,MAAM,EAAImH,KAAK9F,OAAS8F,KAAKhG,OAC7CgG,KAAKJ,IAAM,GAIf,aACE,OAAOI,KAAKJ,IAEd,WAAWxI,GACT4I,KAAKJ,IAAMxI,EACX4I,KAAKL,IAAM7G,KAAKD,MAAMzB,EAAQ4I,KAAK9F,OAAS8F,KAAKhG,OACjD,GAAGgG,KAAKL,IAAM,IAAM5G,OAAOmJ,SAASlC,KAAKL,KAAM,CAC7CK,KAAKL,IAAM,EACXK,KAAKJ,IAAM9G,KAAKD,MAAM,EAAImH,KAAKhG,MAAQgG,KAAK9F,SA8ChD,kBAAkBiI,GAChB,MAAMtI,EAAMsI,aAAqBC,WAAa,EAAAnJ,OAAOkJ,GAAaA,EAClE,MAAM,MAAEnI,EAAK,OAAEE,SAAiB,EAAAN,mBAAmBC,GACnDmG,KAAKqC,SAAWxI,EAChBmG,KAAKhG,MAAQA;CACbgG,KAAK9F,OAASA,EACd8F,KAAKsC,OAASxJ,KAAKD,MAAMmB,EAAQ,KACjCgG,KAAKiB,YAAYsB,cAAgBvC,KAAKsC,OACtCtC,KAAKmB,YAAYoB,cAAgBvC,KAAKwC,OACtCxC,KAAKyC,eACL,GAAGzC,KAAKuB,aAAa1H,IAAI6I,WAAW,SAClCC,IAAIC,gBAAgB5C,KAAKuB,aAAa1H,KACxCmG,KAAKuB,aAAa1H,IAAMsI,aAAqBC,KAAOO,IAAIE,gBAAgBV,GAAatI,EACrFmG,KAAKwB,aAAasB,SAAW,MAC7B9C,KAAKiB,YAAY6B,SAAW,MAC5B9C,KAAKmB,YAAY2B,SAAW,MAG9B,oBACE9C,KAAKN,SAAW5G,KAAKiK,IAAI,EAAGjK,KAAKkK,MAAMhD,KAAKhG,MAAQgG,KAAKL,MAAQ,GAAKK,KAAK9F,OAAS8F,KAAKJ,MAAQ,GAAK,IAGxG,OACE,EAAAxF,cAAc4F,KAAKK,WACnB,EAAAjG,cAAc4F,KAAKM,eACnB,EAAAlG,cAAc4F,KAAKG,cACnB,EAAA8C,iBACA,MAAMC,EAAWlD,KAAKL,IAAM,IAC5BK,KAAK9F,QAAUgJ,EAAWlD,KAAKhG,MAC/BgG,KAAKhG,MAAQkJ,EACblD,KAAKjF,KAAO,EACZiF,KAAKP,SAAW,EAChBO,KAAKmD,UAAY,IAAI9H,KACrB2E,KAAKoD,2BACEpD,KAAKqD,eACLrD,KAAKsD,WACZtD,KAAKO,SAASjG,YAAc,QAC5B,GAAG0F,KAAKuD,OAAS,KAAM,CACrBC,cAAcxD,KAAKuD,cACZvD,KAAKuD,MAEd,MAAME,EAAQ,IAAI,EAAAC,gBAAgB,CAChC1J,MAAOgG,KAAKhG,MACZE,OAAQ8F,KAAK9F,OACboI,OAAQtC,KAAKL,IACb6C,OAAQxC,KAAKJ;AACb+D,OAAQ7K,KAAK8K,IAAI5D,KAAKhG,MAAQgG,KAAKL,IAAKK,KAAK9F,OAAS8F,KAAKJ,KAAO,EAClEiE,aAAc7D,KAAKsB,qBAAqBwC,UACvCC,cAAc/D,KAAKhC,SAAUgC,KAAKK,WACrC,MAAM2D,EAAYlL,KAAKiK,IAAI,IAAK/C,KAAKhG,MAAQ,KAC7C,MAAMiK,EAAanL,KAAKiK,IAAI,IAAK/C,KAAK9F,OAAS,KAC/C8F,KAAKlC,KAAKoG,aAAa,UAAW,OAAOF,KAAaC,KACtDjE,KAAK2B,aAAawC,KAAKC,QAAUpE,KAAKqC,SACtCrC,KAAK2B,aAAauC,aAAa,QAASlE,KAAKhG,MAAMY,YACnDoF,KAAK2B,aAAauC,aAAa,SAAUlE,KAAK9F,OAAOU,YACrD,MAAMyJ,EAAOrE,KAAKhC,SAASnB,yBAC3B,MAAMyD,EAAgBN,KAAKhC,SAASnB,yBACpC,IAAI,MAAMyH,KAAQb,EAAO,CACvB,MAAMc,EAAOF,EAAKnH,YAAY8C,KAAKhC,SAASiB,gBAAgB,EAAA5G,OAAQ,SACpEkM,EAAKC,GAAK,GAAGF,EAAKE,OAElB,MAAMC,EAAWF,EAAKrH,YAAY8C,KAAKhC,SAASiB,gBAAgB,EAAA5G,OAAQ,QACxEoM,EAASN,KAAKC,QAAU,IAAIE,EAAKE,KAEjC,MAAME,EAAWpE,EAAcpD,YAAY8C,KAAKhC,SAASiB,gBAAgB,EAAA5G,OAAQ,MACjFqM,EAASF,GAAK,GAAGF,EAAKE,OACtBE,EAAS5E,UAAU6E,IAAI,aAEvB,MAAMC,EAAOF,EAASxH,YAAY8C,KAAKhC,SAASiB,gBAAgB,EAAA5G,OAAQ,QACxEuM,EAAKT,KAAKC,QAAU,IAAIpE,KAAK2B,aAAa6C,KAC1CI,EAAKV,aAAa,OAAQ,QAAQK,EAAKC;CAEvC,MAAMK,EAAWH,EAASxH,YAAY8C,KAAKhC,SAASiB,gBAAgB,EAAA5G,OAAQ,QAC5EwM,EAAS/E,UAAU6E,IAAI,UAAW,aAClCE,EAASV,KAAKC,QAAU,IAAIE,EAAKE,KAEjC,MAAMjO,EAAIgJ,EAAcuF,KAAKR,EAAKE,IAClC,GAAGjO,EAAG,CACJ,MAAMwO,EAAI/E,KAAKhG,MAAQgG,KAAKL,IAC5B,MAAMqF,EAAIhF,KAAK9F,OAAS8F,KAAKJ,IAC7B8E,EAASO,UAAUb,QAAQc,WAAWlF,KAAKlC,KAAKqH,sBAAsBC,aACpEtM,KAAKD,MAAMC,KAAKuM,UAAYrB,EAAYe,GAAKO,SAAS/O,EAAE,GAAI,IAAMwO,GAClEjM,KAAKD,MAAMC,KAAKuM,UAAYpB,EAAae,GAAKM,SAAS/O,EAAE,GAAI,IAAMyO,KAIzEhF,KAAKG,aAAajD,YAAYmH,GAC9BrE,KAAKM,cAAcpD,YAAYoD,GAC/BN,KAAKuF,kBACLvF,KAAK4B,iBAGC,OAAO4D,GACbA,EAAQ1F,UAAU6E,IAAI,YACtB,GAAG3E,KAAKuD,OAAS,KAAM,OACvBvD,KAAKsD,WAAa,IAAIjI,KACtB2E,KAAKuD,MAAQxF,OAAO0H,YAAYzF,KAAK0F,WAAW/N,KAAKqI,MAAO,KAC5DA,KAAK0F,aAGC,OAAOC,GACbA,EAAMH,QAAQ1F,UAAUC,OAAO,YAC/B,MAAM,GAAEyE,GAAOmB,EAAMC,OAAOC,WAC5B,MAAMtP,EAAIgJ,EAAcuF,KAAKN,GAC7B,IAAIjO,EAAG,OACP,MAAMuP,EAAIR,SAAS/O,EAAE,GAAI,IACzB,MAAMwP,EAAIT,SAAS/O,EAAE,GAAI,IACzBoP,EAAMH,QAAUxF,KAAKgG,cAAcL,EAAMH,QAAS,MAAMM,EAAI,KAAKC,OACjEJ,EAAMH,QAAUxF,KAAKgG,cAAcL,EAAMH,QAAS,MAAMM,EAAI,KAAKC,OACjEJ,EAAMH,QAAUxF,KAAKgG,cAAcL,EAAMH,QAAS,MAAMM,KAAKC,EAAI;CACjEJ,EAAMH,QAAUxF,KAAKgG,cAAcL,EAAMH,QAAS,MAAMM,KAAKC,EAAI,OACjE,GAAG/F,KAAKM,cAAc5D,kBAAoB,EACxC,OACFsD,KAAKqD,QAAU,IAAIhI,KACnB,GAAG2E,KAAKuD,OAAS,KAAM,CACrBC,cAAcxD,KAAKuD,cACZvD,KAAKuD,MAEd,MAAM0C,EAAcjG,KAAKM,cAAcT,cAAkC,oBACzE,GAAGoG,EAAa,CACdA,EAAYnG,UAAUC,OAAO,aAC7BkG,EAAYhB,UAAUb,QAAQ8B,WAAW,GAE3C,MAAMlC,EAAYlL,KAAKiK,IAAI,IAAK/C,KAAKhG,MAAQ,IAC7C,MAAMiK,EAAanL,KAAKiK,IAAI,IAAK/C,KAAK9F,OAAS,IAC/C8F,KAAKlC,KAAKoG,aAAa,UAAW,OAAOF,KAAaC,KACtDjE,KAAK4B,iBACL,EAAAuE,gBAAgBnG,MAGV,cAAcoG,EAA6BC,G,MACjD,MAAMC,GAAK,EAAGtG,KAAKM,cAAcT,cAAcwG,MAAK,0BAAEE,QAA4B,cAClF,IAAID,GAAStG,KAAKwG,WAAWF,IAAUA,IAAUF,EAC/C,OAAOA,EACT,MAAMK,EAAKL,EAAQnB,UAAUb,QAC7B,IAAIqC,EAAGC,cAAe,OAAON,EAC7B,MAAMO,EAAKL,EAAMrB,UAAUb,QAC3B,IAAIuC,EAAGD,cAAe,OAAON,EAC7B,MAAMQ,EAAKH,EAAGI,QAAQ,GAAGC,OACzB,MAAMC,EAAKJ,EAAGE,QAAQ,GAAGC,OACzB,GAAGhO,KAAKkK,MAAM4D,EAAGxJ,EAAI2J,EAAG3J,IAAM,GAAKwJ,EAAGI,EAAID,EAAGC,IAAM,GAAKhH,KAAKN,SAC3D,OAAO0G,EACT,MAAMa,EAAiBb,EAAQtG,UAAUoH,SAAS,SAClD,MAAMC,EAAeb,EAAMxG,UAAUoH,SAAS,SAC9C,GAAGD,EAAgB,CACjB,IAAIE,EAAc,CAChBb,EAAMxG,UAAUC,OAAO;CACvB4G,EAAGT,WAAW,GACdE,EAAQlJ,YAAYoJ,QACf,GAAGA,EAAM5J,kBAAoB0J,EAAQ1J,kBAAmB,CAC7D,EAAAF,iBAAiB4J,EAASE,GAC1BF,EAAQrG,SACR,OAAOuG,MACF,CACL,EAAA9J,iBAAiB8J,EAAOF,GACxBE,EAAMvG,SAER,OAAOqG,EAET,GAAGe,EAAc,CACff,EAAQtG,UAAUC,OAAO,aACzB0G,EAAGP,WAAW,GACdI,EAAMpJ,YAAYkJ,GAClB,OAAOE,EAET,MAAMc,EAAWhB,EAAQP,WAAY3I,YAAY8C,KAAKhC,SAASiB,gBAAgB,EAAA5G,OAAQ,MACvF+O,EAAStH,UAAU6E,IAAI,YAAa,SACpCyC,EAASlK,YAAYkJ,GACrBA,EAAQtG,UAAUC,OAAO,aACzBqH,EAASlK,YAAYoJ,GACrBA,EAAMxG,UAAUC,OAAO,aACvB,MAAM1I,EAAIsP,EAAGE,QAAQ,GACrBJ,EAAGP,WAAW,GACdS,EAAGT,WAAW,GACdkB,EAASnC,UAAUb,QAAQc,WAAW7N,GACtC,OAAO+P,EAGD,WAAW5B,GACjB,OAAO,MAGD,aACNxF,KAAKjF,KAAOM,KAAKgM,MAAQrH,KAAKsD,WAAYgE,UAAYtH,KAAKP,SAC3DO,KAAKO,SAASjG,YAAc,EAAAQ,WAAWkF,KAAKjF,MAGtC,OACNiF,KAAKS,UAAUX,UAAU6E,IAAI,QAC7B3E,KAAKyC,eAGC,OACN,MAAM8E,EAA0BC,KAAKC,MAAMzH,KAAKQ,YAAYlG,aAAe,QAC3E,GAAGiN,GAAQ,KACT,OACFvH,KAAKhG,MAAQuN,EAAKvN,OAAS,EAC3BgG,KAAK9F,OAASqN,EAAKrN,QAAU,EAC7B8F,KAAKP,SAAW8H,EAAKxM,MAAQ,EAC7BiF,KAAKL,IAAM4H,EAAKjF,QAAU,EAC1BtC,KAAKJ,IAAM2H,EAAK/E,QAAU;CAC1B,GAAG+E,EAAKpE,WAAa,KACnBnD,KAAKmD,UAAY,IAAI9H,KAAKkM,EAAKpE,WACjC,GAAGoE,EAAKlE,SAAW,KACjBrD,KAAKqD,QAAU,IAAIhI,KAAKkM,EAAKlE,SAC/BrD,KAAKoD,oBAGC,kB,QACN,GAAGpD,KAAKsD,YAAc,MAAQtD,KAAKqD,SAAW,KAAMrD,KAAK0F,aACzD1F,KAAKQ,YAAYlG,YAAckN,KAAKE,UAAU,CAC5C1N,MAAOgG,KAAKhG,MACZE,OAAQ8F,KAAK9F,OACboI,OAAQtC,KAAKL,IACb6C,OAAQxC,KAAKJ,IACbuD,WAAS,EAAEnD,KAAKmD,aAAS,0BAAEmE,UAC3BjE,SAAO,EAAErD,KAAKqD,WAAO,0BAAEiE,UACvBvM,KAAMiF,KAAKjF,OAIP,OACNiF,KAAKuF,kBACL,OAAO,EAAAoC,iBAAiB3H,KAAKlC,KAAM,UAAUzC,KAAKgM,YAAaO,GAGzD,kBACN,MAAM,MAAEC,GAAU7H,KAAKe,cACvB,IAAI8G,IAAUA,EAAMxL,OAAQ,OAC5B,MAAMyL,EAAOD,EAAME,KAAK,GACxB/H,KAAKgI,YAAYF,GAGX,cACN9H,KAAKsC,OAAStC,KAAKiB,YAAYsB,cAC/BvC,KAAKmB,YAAYoB,cAAgBvC,KAAKwC,OACtCxC,KAAKiB,YAAYsB,cAAgBvC,KAAKsC,OACtCtC,KAAKyC,eAGC,cACNzC,KAAKwC,OAASxC,KAAKmB,YAAYoB,cAC/BvC,KAAKiB,YAAYsB,cAAgBvC,KAAKsC,OACtCtC,KAAKmB,YAAYoB,cAAgBvC,KAAKwC,OACtCxC,KAAKyC;AAGC,eACNzC,KAAKqB,iBAAiB/G,YAAc,IAAI0F,KAAKL,IAAMK,KAAKJ,cAGlD,mBAAmBxC,GACzBA,EAAEG,iBACF,IAAIyC,KAAKqC,SAAU,OACnBrC,KAAKiI,OACLjI,KAAKU,SAASwH,QAGR,cACN,GAAGlI,KAAKuB,aAAa1H,IAAI6I,WAAW,SAClCC,IAAIC,gBAAgB5C,KAAKuB,aAAa1H,KACxCmG,KAAKuB,aAAa1H,IAAM,GACxBmG,KAAKwB,aAAasB,SAAW,KAC7B9C,KAAKiB,YAAY6B,SAAW,KAC5B9C,KAAKmB,YAAY2B,SAAW,KAC5B9C,KAAKS,UAAUX,UAAUC,OAAO,QAG1B,iBACN,IAAIiE,EAAmBC,EACvB,IAAIjE,KAAKQ,YAAYlG,YAAa,CAChC,GAAGyD,OAAOoK,WAAapK,OAAOqK,YAAa,CACzCnE,EAAa,IACbD,EAAYC,EAAalG,OAAOqK,YAAcrK,OAAOoK,eAChD,CACLnE,EAAY,IACZC,EAAaD,EAAYjG,OAAOoK,WAAapK,OAAOqK,YAEtDpI,KAAKlC,KAAKoG,aAAa,UAAW,OAAOF,KAAaC,SACjD,CACL,MAAMoE,EAAUrI,KAAKlC,KAAKuK,QAAQjE,QAClCJ,EAAYqE,EAAQrO,MACpBiK,EAAaoE,EAAQnO,OAEvB,MAAMoO,EAAYtE,EAAYC,EAC9B,MAAMsE,EAAcxK,OAAOoK,WAAapK,OAAOqK,YAC/C,MAAMI,GAASF,EAAYC,EAAcvE,EAAYjG,OAAOoK,WAAalE,EAAalG,OAAOqK,aAAerK,OAAO0K,iBACnHzI,KAAKI,YAAYsI,MAAMzD,UAAY,SAASuD,KAGtC,QAAQpL;AACd,GAAG4C,KAAKS,UAAUX,UAAUoH,SAAS,SAAW9J,EAAEuL,eAAiBvL,EAAEuL,cAAcd,MAAMxL,OAAQ,CAC/F,EAAAc,eAAeC,GACf4C,KAAKc,WAAW1D,EAAEuL,gBAId,iBAAiBC,GACvB,IAAIC,EAAS,MACb,IAAI,MAAMd,KAAQa,EAAaE,MAAO,CACpC,OAAOf,EAAKgB,MACV,IAAK,OAAQ,CACX,IAAIhB,EAAKvJ,KAAKkE,WAAW,UAAW,MACpC,MAAMoF,EAAOC,EAAKiB,YAClB,IAAIlB,EAAM,MACV,IACE9H,KAAKgI,YAAYF,GACjBe,EAAS,KACT,OACF,MAEF,IAAK,SACH,OAAOd,EAAKvJ,MACV,IAAK,gBACH,IAAI,MAAMyK,WAAc,EAAAxL,UAAUsK,EAAMA,EAAKmB,cAAcrK,MAAM,QAC/D,UACQmB,KAAKgI,wBAAyBmB,MAAMF,IAAM/P,QAChD2P,EAAS,KACT,MACA,OACJ,MAEJ,MAEJ,GAAGA,EAAQ,MAEb,OAAOA,GAzaX,gBA6aA,IAAIrJ,EAEJ,SAASoI,EAAW9J,G,QAClBA,EAAKgC,UAAU6E,IAAI,aACnB,KAAA7G,EAAK+B,cAA2B,WAAO,0BAAEoF,UAAUb,QAAQyC,QAAQ,MAAC,0BAAGuC,SAAS,EAAG,K,yGCpcrF,aASA,MAAMC,EAA2C,CAC/CC,EAAG,EAAG/S,EAAG,EACTgT,EAAG,EAAGnT,EAAG,EACToT,EAAG,EAAGxE,EAAG,EACTyE,EAAG,EAAGC,EAAG,EACTC,EAAG,EAAGnT,EAAG,EACToT,EAAG,EAAGxR,EAAG,EACTyR,EAAG,EAAGC,EAAG,EACTC,EAAG,EAAG1S,EAAG,EACT2S,EAAG,EAAGC,EAAG,EACTC,EAAG,GAeL,MAAaxG,EA2BX,YAAYyG,G;CAfJ,KAAAC,QAAU,IAAIC,IACd,KAAAJ,EAAY,EACZ,KAAAK,EAAY,EACZ,KAAA9T,EAAY,EACZ,KAAAC,EAAY,EACZ,KAAA2G,EAAY,EACZ,KAAAmN,KAAgB,MAUtBvK,KAAKhG,MAAQmQ,EAAQnQ,MACrBgG,KAAK9F,OAASiQ,EAAQjQ,OACtB8F,KAAKsC,OAAS6H,EAAQ7H,OACtBtC,KAAKwC,OAAS2H,EAAQ3H,OACtBxC,KAAKwK,SAAO,EAAGL,EAAQK,WAAO,mBAAI,GAClCxK,KAAKyK,QAAM,EAAGN,EAAQM,UAAM,mBAAI,IAChCzK,KAAK7D,KAAO,EAAAD,SAAO,EAACiO,EAAQhO,QAAI,mBAAIrD,KAAK4R,MAAM5R,KAAKuM,SAAWtM,OAAO4R,mBACtE3K,KAAK2D,OAAS7K,KAAK8K,KAAG,EAACuG,EAAQxG,UAAM,mBAAI,EAAG3D,KAAK4K,GAAI5K,KAAK6K,IAC1D7K,KAAK6D,aAAesG,EAAQtG,aAAe/K,KAAKoC,MAAM8E,KAAKqF,SAAW,EAAI,GAAK,EAE/ErF,KAAK8K,SAAW,MAChB,IAAI9K,KAAK+K,GAAK,EAAG/K,KAAK+K,GAAK/K,KAAKwC,OAAQxC,KAAK+K,KAAM,CACjD/K,KAAKgL,QACL,IAAIhL,KAAKiL,GAAK,EAAGjL,KAAKiL,GAAKjL,KAAKsC,OAAQtC,KAAKiL,KAAM,CACjDjL,KAAKqG,OACLrG,KAAKkL,WAAWlL,KAAKiL,GAAKjL,KAAKsC,QAAUtC,KAAK+K,GAAK,GAAI/K,KAAKmL,eAAe,OAC3EnL,KAAKkL,WAAWlL,KAAKiL,GAAKjL,KAAKsC,OAAStC,KAAK+K,GAAI/K,KAAKmL,mBAI1DnL,KAAK8K,SAAW,KAChB,IAAI9K,KAAKiL,GAAK,EAAGjL,KAAKiL,GAAKjL,KAAKsC,OAAQtC,KAAKiL,KAAM,CACjDjL,KAAKgL,QACL,IAAIhL,KAAK+K,GAAK,EAAG/K,KAAK+K,GAAK/K,KAAKwC,OAAQxC,KAAK+K,KAAM,CACjD/K,KAAKqG,OACLrG,KAAKkL,WAAWlL,KAAKiL,GAAK,EAAIjL,KAAKsC,OAAStC,KAAK+K,GAAI/K,KAAKmL;CAC1DnL,KAAKkL,WAAWlL,KAAKiL,GAAKjL,KAAKsC,OAAStC,KAAK+K,GAAI/K,KAAKmL,eAAe,QAIzEnL,KAAK8K,SAAW,MAChB9K,KAAKkL,WAAW,EAAG,CACjBE,OAAQ,CACN,EAAG,EAAAvS,MAAMmH,KAAK6K,GAAI,GAClB,EAAG7K,KAAK2D,OACR3D,KAAK2D,OAAQ3D,KAAK2D,OAAQ,EAAG,EAAG,EAChC3D,KAAK2D,OAAQ,GAEf0H,KAAM,CAAC,IAAK,IAAK,OAGnBrL,KAAK8K,SAAW,KAChB9K,KAAKkL,WAAWlL,KAAKsC,OAAS,EAAG,CAC/B8I,OAAQ,CACN,EAAAvS,MAAMmH,KAAKhG,MAAQgG,KAAK6K,IAAK,EAC7B7K,KAAKhG,MAAQgG,KAAK2D,OAAQ,EAC1B3D,KAAK2D,OAAQ3D,KAAK2D,OAAQ,EAAG,EAAG,EAChC3D,KAAKhG,MAAOgG,KAAK2D,QAEnB0H,KAAM,CAAC,IAAK,IAAK,OAGnBrL,KAAK8K,SAAW,MAChB9K,KAAKkL,WAAWlL,KAAKsC,OAAStC,KAAKwC,OAAS,EAAG,CAC7C4I,OAAQ,CACNpL,KAAKhG,MAAO,EAAAnB,MAAMmH,KAAK9F,OAAS8F,KAAK6K,GAAI,GACzC7K,KAAKhG,MAAOgG,KAAK9F,OAAS8F,KAAK2D,OAC/B3D,KAAK2D,OAAQ3D,KAAK2D,OAAQ,EAAG,EAAG,EAChC3D,KAAKhG,MAAQgG,KAAK2D,OAAQ3D,KAAK9F,QAEjCmR,KAAM,CAAC,IAAK,IAAK,OAGnBrL,KAAK8K,SAAW,KAChB9K,KAAKkL,WAAWlL,KAAKsC,QAAUtC,KAAKwC,OAAS,GAAI,CAC/C4I,OAAQ,CACN,EAAAvS,MAAMmH,KAAK6K,GAAI,GAAI7K,KAAK9F,OACxB8F,KAAK2D,OAAQ3D,KAAK9F,OAClB8F,KAAK2D,OAAQ3D,KAAK2D,OAAQ,EAAG,EAAG,EAAG,EACnC3D,KAAK9F,OAAS8F,KAAK2D,QAErB0H,KAAM,CAAC,IAAK,IAAK,OAGnBrL,KAAKsL,MAAQ,GACb,IAAI,MAAOnV,EAAGoV,KAAWvL,KAAKoK,QAAS,CACrC,MAAMrE,EAAIjN,KAAK4R,MAAMvU,EAAI6J,KAAKsC;GAC9B,EAACtC,KAAKsL,MAAMvF,MAAE,mBAAK/F,KAAKsL,MAAMvF,GAAK,IAAK5P,EAAI6J,KAAKsC,QAAUtC,KAAKwL,oBAAoBD,GAGtFvL,KAAKoK,QAAQqB,QAtFf,SAAmB,OAAOzL,KAAK8K,SAAW9K,KAAK9F,OAAS8F,KAAKwC,OAASxC,KAAKhG,MAAQgG,KAAKsC,OACxF,SAAmB,OAAOtC,KAAK8K,SAAW9K,KAAKhG,MAAQgG,KAAKsC,OAAStC,KAAK9F,OAAS8F,KAAKwC,OACxF,SAAmB,OAAOxC,KAAK4K,IAAM5K,KAAK8K,SAAW9K,KAAK+K,GAAK/K,KAAKiL,IACpE,SAAmB,OAAOjL,KAAK6K,IAAM7K,KAAK8K,SAAW9K,KAAKiL,GAAKjL,KAAK+K,IAsFpE,cAAc/M,EAAoB0N,GAChC,MAAMhS,EAA2B,GACjC,MAAMiS,EAAWD,GAAU,KAAO1N,EAASnB,yBAA2B,KACtE,IAAI,IAAIkJ,EAAI,EAAGA,EAAI/F,KAAKsL,MAAMjP,OAAQ0J,IAAK,CACzC,MAAMkD,EAAMjJ,KAAKsL,MAAMvF,GACvB,IAAI,IAAID,EAAI,EAAGA,EAAImD,EAAI5M,OAAQyJ,IAAK,CAClC,MAAM8F,EAAM5N,EAASiB,gBAAgB,EAAA5G,OAAQ,QAC7CuT,EAAI1H,aAAa,IAAK+E,EAAInD,IAC1B8F,EAAIpH,GAAK,KAAKsB,KAAKC,IACnBrM,EAAOmS,KAAKD,GACZD,IAAQ,MAARA,SAAQ,SAARA,EAAUzO,YAAY0O,IAG1BF,IAAM,MAANA,SAAM,SAANA,EAAQxO,YAAYyO,GACpB,OAAOjS,EAGD,eAAeoS,GACrB,MAAM,EAAE7B,EAAC,EAAEK,EAAC,EAAE9T,EAAC,EAAEC,EAAC,EAAE2G,EAAC,QAAEoN,GAAYxK,KACnC,MAAM+L,EAAM/L,KAAK5J,EAAE,GACnB,MAAM4V,EAAMhM,KAAK+E,EAAE,GACnB,MAAMkH,EAAMjM,KAAK5J,EAAE,IACnB,MAAM8V,EAAMlM,KAAK+E,EAAEkF,GACnB,MAAMkC,EAAMnM,KAAK5J,EAAE,GAAMkU,EAAI7T,GAC7B,MAAM2V,EAAMpM,KAAK+E,GAAGyF,EAAUhU,GAC9B,MAAM6V,EAAMrM,KAAK5J,EAAE,GAAMoU,EAAUF,GACnC,MAAMgC,EAAMtM,KAAK+E,EAAEyF,EAAUhU,GAC7B,MAAM+V,EAAMvM,KAAK5J,EAAE,GAAM,EAAIoU,EAAUF,EAAI7T,GAC3C,MAAM+V,EAAMxM,KAAK+E,EAAE,EAAIyF,EAAUhU;CACjC,MAAMiW,EAAMzM,KAAK5J,EAAE,GAAM,EAAIoU,EAAUF,EAAI7T,GAC3C,MAAMiW,EAAM1M,KAAK+E,EAAE,EAAIyF,EAAUhU,GACjC,MAAMmW,EAAM3M,KAAK5J,EAAE,GAAMoU,EAAUF,GACnC,MAAMsC,EAAM5M,KAAK+E,EAAEyF,EAAUhU,GAC7B,MAAMqW,EAAM7M,KAAK5J,EAAE,GAAMkU,EAAI7T,GAC7B,MAAMqW,EAAM9M,KAAK+E,GAAGyF,EAAUhU,GAC9B,MAAMuW,EAAM/M,KAAK5J,EAAE,IACnB,MAAM4W,EAAMhN,KAAK+E,EAAE3H,GACnB,MAAM6P,EAAMjN,KAAK5J,EAAE,GACnB,MAAM8W,EAAMlN,KAAK+E,EAAE,GACnB,MAAO,CACLqG,OAAQpL,KAAK8K,SAAWgB,EAAU,CAChCoB,EAAKD,EAAKD,EAAKD,EAAKD,EAAKD,EAAKD,EAAKD,EACnCD,EAAKD,EAAKD,EAAKD,EAAKD,EAAKD,EAAKD,EAAKD,EACnCD,EAAKD,EAAKD,EAAKD,GACb,CACFC,EAAKD,EAAKG,EAAKD,EAAKG,EAAKD,EAAKG,EAAKD,EACnCG,EAAKD,EAAKG,EAAKD,EAAKG,EAAKD,EAAKG,EAAKD,EACnCG,EAAKD,EAAKG,EAAKD,GACbnB,EAAU,CACZmB,EAAKC,EAAKH,EAAKC,EAAKH,EAAKC,EAAKH,EAAKC,EACnCH,EAAKC,EAAKH,EAAKC,EAAKH,EAAKC,EAAKH,EAAKC,EACnCH,EAAKC,EAAKH,EAAKC,GACb,CACFD,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EACnCC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EACnCC,EAAKC,EAAKC,EAAKC,GAEjB7B,KAAM,CAAC,IAAK,IAAK,IAAK,MAIlB,SACN,MAAMvF,EAAIhN,KAAKqU,IAAInN,KAAK7D,QAAU,IAClC,OAAO2J,EAAIhN,KAAKoC,MAAM4K,GAGhB,aACN,OAAO9F,KAAKqF,SAAWrF,KAAKyK,OAAS,EAAIzK,KAAKyK,OAGxC,QACNzK,KAAK5C,EAAI4C,KAAKoN,aAGR,OACN,MAAMC,EAAOrN,KAAKuK,KAClB,OAAOvK,KAAK6D,cACV,KAAK,EAAG,KAAK,EACX7D,KAAKuK,MAAQvK,KAAKiL,GAAKjL,KAAK+K,IAAM,KAAO/K,KAAK6D,cAAgB7D,KAAK8K,SAAW,EAAI,IAAM,EACxF,MACF,QACE9K,KAAKuK,KAAOvK,KAAKqF,UAAY,GAC7B,MAEJrF,KAAKiK,EAAKjK,KAAKuK,OAAS8C,GAAQrN,KAAK5C,EAAI4C,KAAK5C,EAC9C4C,KAAKsK,EAAItK,KAAKoN,aACdpN,KAAKxJ,EAAIwJ,KAAKoN,aACdpN,KAAKvJ,EAAIuJ,KAAKoN,aACdpN,KAAK5C,EAAI4C,KAAKoN,aAGR,EAAE1D,GACR,OAAO,EAAA7Q,MAAMmH,KAAKsN,GAAKtN,KAAK4K,GAAKlB,EAAG,GAG9B,EAAEA,GACR,OAAO,EAAA7Q,MAAMmH,KAAKuN,GAAKvN,KAAK6K,GAAKnB,GAAK1J,KAAKuK,MAAQ,EAAI,GAAI;AAGrD,WAAWpU,EAAWoV,GAC5B,MAAMnB,EAAUpK,KAAKoK,QAAQpT,IAAIb,GACjC,GAAGiU,EACDA,EAAQyB,KAAKN,QAEbvL,KAAKoK,QAAQoD,IAAIrX,EAAG,CAACoV,IAGjB,oBAAoBnB,GAC1B,GAAGA,GAAW,OAASA,EAAQ/N,OAC7B,MAAO,GACT,GAAG+N,EAAQ/N,OAAS,EAAG,CACrB,MAAMoR,EAAY,IAAIC,IAAItD,GAC1B,MAAM1Q,EAAiB,CAAE0R,OAAQ,GAAIC,KAAM,IAC3C,MAAMoC,EAAUE,KAAM,CACpB,IAAIC,EAAQ,MACZ,IAAI,MAAMtH,KAASmH,EACjB,IAAI/T,EAAO0R,OAAO/O,OAAQ,CACxB3C,EAAO0R,OAAS9E,EAAM8E,OACtB1R,EAAO2R,KAAO/E,EAAM+E,KACpBuC,EAAQ,KACRH,EAAUI,OAAOvH,GACjB,WACK,GACLxN,KAAKmC,IAAIvB,EAAO0R,OAAO,GAAK9E,EAAM8E,OAAO9E,EAAM8E,OAAO/O,OAAS,IAAM,GACrEvD,KAAKmC,IAAIvB,EAAO0R,OAAO,GAAK9E,EAAM8E,OAAO9E,EAAM8E,OAAO/O,OAAS,IAAM,EACrE,CACA3C,EAAO0R,OAAO0C,OAAO,EAAG,KAAMxH,EAAM8E,QACpC1R,EAAO2R,KAAKyC,OAAO,EAAG,KAAMxH,EAAM+E,MAClCuC,EAAQ,KACRH,EAAUI,OAAOvH,GACjB,WACK,GACLxN,KAAKmC,IAAIqL,EAAM8E,OAAO,GAAK1R,EAAO0R,OAAO1R,EAAO0R,OAAO/O,OAAS,IAAM,GACtEvD,KAAKmC,IAAIqL,EAAM8E,OAAO,GAAK1R,EAAO0R,OAAO1R,EAAO0R,OAAO/O,OAAS,IAAM,EACtE,CACAiK,EAAM8E,OAAO0C,OAAO,EAAG,KAAMpU,EAAO0R,QACpC9E,EAAM+E,KAAKyC,OAAO,EAAG,KAAMpU,EAAO2R,MAClC3R,EAAO0R,OAAS9E,EAAM8E,OACtB1R,EAAO2R,KAAO/E,EAAM+E,KACpBuC,EAAQ,KACRH,EAAUI,OAAOvH,GACjB,MAEJ,IAAIsH,EACF,MAEJxD,EAAU,CAAC1Q,GAEb,MAAM,OAAE0R,EAAM,KAAEC,GAASjB,EAAQ,GACjC,IAAI/L,EAAI,EACR,IAAI3E,EAAS,GACb,IAAI,MAAMvD,KAAKkV,EAAM,CACnB3R,GAAUvD,EACV,MAAMK,EAAI6S,EAAalT,GACvB,GAAGK,EAAGkD,GAAU0R,EAAO2C,MAAM1P,EAAGA,GAAK7H,GAAGwX,KAAK,KAE/C,OAAOtU,EAAS,KA3QpB,qB;4BClCA,aAkBA,SAAgBoI,EACdhE,EAA4BE,SAC5B+D,EACAC,EACAiM,EAAiB,aAAcC,EAAe,YAE9C,MAAMC,EAAmB,IAAI9D,IAC7B,MAAM+D,EAAS,IAAI/D,IAEnBvM,EAAKrE,iBAAiB,YAAa4U,EAAkB,MACrDvQ,EAAKrE,iBAAiB,YAAa6U,GACnCxQ,EAAKrE,iBAAiB,UAAW8U,GACjCzQ,EAAKrE,iBAAiB,aAAc8U,GACpCzQ,EAAKrE,iBAAiB,aAAc+U,EAAkB,CAAEC,QAAS,KAAMC,QAAS,QAChF5Q,EAAKrE,iBAAiB,YAAakV,EAAiB,CAAED,QAAS,QAC/D5Q,EAAKrE,iBAAiB,WAAYmV,EAAgB,CAAEF,QAAS,QAC7D5Q,EAAKrE,iBAAiB,cAAemV,EAAgB,CAAEF,QAAS,QAEhE,SAASG,EAASzR,GAChB,MAAMuI,EAAQyI,EAAOpX,IAAIoG,EAAE0R,YAC3B,OAAOnJ,GAAUA,EAAMmJ,YAAc,OAAW1R,aAAa2R,WAAcpJ,EAAQ,KAGrF,SAASqJ,EAAiB5R,GACxB,IAAI,OAAEwI,GAAWxI,EACjB,KAAKwI,aAAkBqJ,SAAU,OACjCrJ,EAASA,EAAOW,QAAQ,GAAG0H,KAAkBC,MAAiBD,IAAiBC,KAC/E,GAAGtI,aAAkBsJ,mBACnB,OAAOtJ,EAGX,SAASyI,EAAiBjR,GACxB,GAAGA,EAAE+R,SAAW,EAAG,OACnB,MAAMvJ,EAASoJ,EAAiB5R,GAChC,IAAIwI,EAAQ,OACZwJ,EAAgBxJ,EAAQxI,EAAGA,EAAEiS,SAAWjS,EAAEkS,UAC1C,EAAAnS,eAAeC,GAGjB,SAASoR,EAAiBpR,GACxB,MAAMmS,EAAUnS,EAAEoS,cAAczH,KAAK,GACrC,IAAIwH,EAAS,OACb,MAAM3J,EAASoJ,EAAiB5R,GAChC,IAAIwI,EAAQ,OACZwJ,EAAgBxJ,EAAQ2J,EAASnS,EAAEiS,SAAWjS,EAAEkS,UAChD,EAAAnS,eAAeC,GAGjB,SAASgS,EAAgBxJ,EAA4B2J,EAAkBE,G;CACrE,MAAM3R,EAAO8H,EAAO8J,gBACpB,MAAMlK,EAAUI,EAAO+J,QAAQ1B,GAAkBrI,EAASA,EAAOW,QAA4B0H,GAC7F,GAAGE,EAAiByB,IAAIpK,GAAU,OAClC,MAAMqK,EAAarK,EAAQP,UAAUb,QACrC,IAAIyL,EAAWnJ,eAAiBmJ,EAAWhJ,QAAQ,GAAGrI,OAASsR,aAAaC,wBAAyB,CACnG,MAAM9K,EAAYnH,EAAKqH,qBACvBF,EAAUG,aAAa,EAAG,GAC1ByK,EAAWG,iBAAiB/K,EAAW,GAEzC,MAAMA,EAAY4K,EAAWhJ,QAAQ,GACrC,MAAMoJ,EAASC,EACbpS,EAAMyR,EAAS/J,EAAQK,YACvBsK,gBAAgBlL,EAAU6B,OAAOsJ,WACnC,MAAM,WAAEtB,GAAeS,EACvB,MAAM5J,EAAuB,CAC3BH,UAASI,SAAQkJ,aAAY7J,YAC7BoL,QAASJ,EAAOnK,EAChBwK,QAASL,EAAOlK,GAElBoI,EAAiBX,IAAIhI,EAASG,GAC9ByI,EAAOZ,IAAIsB,EAAYnJ,GACvB,GAAGH,EAAQ+K,aAAed,GACxB,EAAAjK,EAAQK,cAAU,0BAAE3I,YAAYsI,QAEhCG,EAAM6K,kBAAoB,KAC5BzO,IAAM,MAANA,SAAM,SAANA,EAASyD,GAGX,SAAS8I,EAAgBlR,GACvB,GAAGgR,EAAOT,MAAQvQ,EAAE+R,SAAW,GAAKsB,EAAWrT,GAC7C,EAAAD,eAAeC,GAGnB,SAASuR,EAAgBvR,GACvB,GAAGgR,EAAOT,MACRvQ,EAAEsT,eAAerU,QACjBS,MAAM7E,UAAU0Y,IAAIra,KAAK8G,EAAEsT,eAAgBD,GAAYG,SAAS,MAChE,EAAAzT,eAAeC,GAGnB,SAASqT,EAAWrT,GAClB,MAAMuI,EAAQkJ,EAASzR,GACvB,IAAIuI,EAAO,OAAO,MAClB,MAAMkL,EAAQX,EACZvK,EAAMH,QAAQkK,gBAAkBtS,EAChCuI,EAAMH,QAAQK,YAEhBgL,EAAM/K,GAAKH,EAAM0K,QACjBQ,EAAM9K,GAAKJ,EAAM2K,QACjB3K,EAAMV,UAAUG,aAAayL,EAAM/K,EAAG+K,EAAM9K,GAC5C,OAAO,KAGT,SAASwI,EAAenR;AACtB,GAAGgR,EAAOT,MAAQmD,EAAc1T,GAC9B,EAAAD,eAAeC,GAGnB,SAASwR,EAAexR,GACtB,GAAGgR,EAAOT,MACRvQ,EAAEsT,eAAerU,QACjBS,MAAM7E,UAAU0Y,IAAIra,KAAK8G,EAAEsT,eAAgBI,GAAeF,SAAS,MACnE,EAAAzT,eAAeC,GAGnB,SAAS0T,EAAc1T,G,MACrB,MAAMuI,EAAQkJ,EAASzR,GACvB,IAAIuI,EAAO,OAAO,MAClBwI,EAAiBN,OAAOlI,EAAMH,SAC9B4I,EAAOP,OAAOlI,EAAMmJ,YACpB,GAAGnJ,EAAM6K,mBACP,EAAA7K,EAAMH,QAAQK,cAAU,0BAAE3I,YAAYyI,EAAMH,SAC9CxD,IAAM,MAANA,SAAM,SAANA,EAAS2D,GACT,OAAO,KAGT,MAAO,CACL,WAAWH,GACT,OAAO2I,EAAiByB,IAAIpK,KA/HlC,sBAoIA,SAAS0K,EACPpS,EACAyR,EACA3K,GAEA,MAAMzM,EAAI2F,EAAKiT,iBACf5Y,EAAE2N,EAAIyJ,EAAQyB,QACd7Y,EAAE4N,EAAIwJ,EAAQ0B,QACd,OAAOrM,GAAQ,KAAOzM,EAAEgY,gBACtBvL,aAAgBsK,mBAChBtK,EAAKsM,eAAgBd,UACrBxL,GACEzM,I,0GClKN,aAEOgZ,eAAexJ,EAAiB9N,EAAcnD,EAAc0a,GACjE,MAAMpT,EAAWnE,EAAI+C,cACrB,MAAMkB,EAAOE,EAASqT,eAAeC,eAAe,EAAAjZ,OAAQ,MAAO,MACnE,MAAMkZ,EAAQzT,EAAK0T,WAAW3X,EAAK,MACnCiE,EAAK2T,aAAaF,EAAOzT,EAAKrD,kBACxBtB,QAAQuY,IAAI5U,MAAM7E,UAAU0Y,IAAIra,KAAKib,EAAMrT,iBAAiB,UAAWyT;OACvEP,IAAU,MAAVA,SAAU,SAAVA,EAAaG,EAAOzT,IAC1ByT,EAAMrT,iBAAiB,SAASjB,QAAQ2U,GACxCC,EAAkB/T,GAClB,MAAM5E,EAAO,IAAIkJ,KAAK,EAAC,IAAI0P,eAAgBC,kBAAkBjU,IAAQ,CAAEU,KAAM,kBAC7E,MAAMgH,EAAUxH,EAASiB,gBAAgB,EAAA3G,SAAU,KACnDkN,EAAQrB,KAAOxB,IAAIE,gBAAgB3J,GACnCsM,EAAQwM,SAAWtb,EACnB8O,EAAQyM,QACRtP,IAAIC,gBAAgB4C,EAAQrB,MAd9B,qBAiBAgN,eAAeQ,EAAcO,GAC3B,GAAGA,aAAkBC,kBAAmB,CACtC,MAAM,IAAEtY,GAAQqY,EAChB,IAAIrY,EAAK,OACTqY,EAAOE,gBAAgB,OACvBF,EAAO5X,wBAA2B6O,MAAMtP,IAAMwY,YACzC,GAAGH,aAAkBI,iBAAkB,CAC5C,MAAMnO,EAAO+N,EAAO/N,KAAKC,QACzB,IAAID,EAAM,OACV+N,EAAOE,gBAAgB,QACvBF,EAAOhV,YAAYgV,EAAOtV,cAAc2V,+BAAgCpJ,MAAMhF,IAAOkO,UAIzF,SAASR,EAAkB/T,G,MACzB,MAAME,GAAQ,EAAGF,EAAKlB,iBAAa,mBAAIkB,EACvC,MAAM0U,EAAaxU,EAASyU,iBAAiB3U,EAAM4U,WAAWC,WAC9D,MAAMC,EAAmB,GACzB,MAAMC,EAAsB,GAC5B,IAAIzM,EACJ,MAAMA,EAAUoM,EAAWM,WAAY,CACrC,KAAK1M,aAAmB2M,OAAU3M,aAAmB4M,aACnD,SACF,GAAG,EAAAta,aAAaua,KAAK7M,EAAQ8M,WAC3BN,EAAS/G,KAAKzF,QAEdyM,EAAYhH,KAAKzF,GAErB,IAAI,MAAM+M,KAAcP,EACtBO,EAAWpT,SACb,IAAI,MAAMsS,KAAQQ,EAAa,CAC7B,MAAMO,EAAWf,EAAKa;CACtB,MAAMG,EAAUD,EAASE,WAAW,EAAA3a,iBAAkB,KACtD,GAAGya,IAAaC,EAAShB,EAAKkB,YAAYlB,EAAKzV,cAAc4W,eAAeH,IAE9E,OAAOvV,EAGT,SAAS8T,EAAYlJ,G,MACnB,MAAMpO,GAAW,EAAGoO,EAAMpO,eAAW,0BAAEgZ,WAAW,EAAA1a,kBAAmB,IACrE,GAAG0B,GAAe,KAAM,OACxB,IACE,MAAMmZ,EAAQ/K,EAAMjO,WACpB,GAAIgZ,aAAiBT,eAAkB1Y,EAAYsW,SAAS,EAAArY,WAAY,CACtE,MAAMmb,EAAQhL,EAAM9L,cAAc2V,mBAAmBjY,GACrDoO,EAAMpO,YAAc,GACpBoO,EAAMxL,YAAYwW,QAElBhL,EAAMpO,YAAcA,EACtB,MACAoO,EAAMpO,YAAcA,K,0HCpExB,aAEA,MAAMqZ,EAAc3V,SAAS6B,cAAc,gBAC3C,MAAM+T,EAAmBD,EAAY9T,cAA8B,mBACnE,MAAMgU,EAAiBF,EAAY9T,cAA8B,iBACjE,MAAMiU,EAAkBH,EAAY9T,cAA8B,kBAClE,MAAMkU,EAAoBJ,EAAY9T,cAA8B,oBAEpE,SAAgBsG,EAAgB6N,GAC9BL,EAAY7T,UAAU6E,IAAI,QAC1BgP,EAAYzP,aAAa,aAAc,WACvCyP,EAAYzP,aAAa,iBAAkB,WAC3C0P,EAAiBtZ,YAAc,EAAAa,eAAe6Y,EAAY7Q,WAC1D0Q,EAAevZ,YAAc,EAAAa,eAAe6Y,EAAY3Q;CACxDyQ,EAAgBxZ,YAAc,EAAAQ,WAAWkZ,EAAYjZ,MACrDgZ,EAAkBzZ,YAAc,GAAG0Z,EAAY1R,UAAU0R,EAAYxR,WAAWwR,EAAY1R,OAAS0R,EAAYxR,iBAPnH,oBAUA,SAAgBS,IACd0Q,EAAY7T,UAAUC,OAAO,QAC7B6T,EAAiBtZ,YAAc,GAC/BuZ,EAAevZ,YAAc,GAC7BwZ,EAAgBxZ,YAAc,GAC9ByZ,EAAkBzZ,YAAc,GALlC,oB,0GCnBA,aAEA,SAAgB2F,EACduF,EACAyO,EACAC,EACAC,EACAC,GAEA,MAAMC,EAA0BJ,GAAgB,KAAO,KAAOK,EAC9D9O,EAAQ/L,iBAAiB,YAAa8a,EAAcL,IAAiB,MAAjBA,SAAiB,EAAjBA,EAAqBG,IACzE7O,EAAQ/L,iBAAiB,WAAY8a,EAAcJ,IAAgB,MAAhBA,SAAgB,EAAhBA,EAAoBE,IACvE7O,EAAQ/L,iBAAiB,YAAa8a,EAAcH,IACpD5O,EAAQ/L,iBAAiB,OAAQ8a,EAAcN,IAXjD,qBAcA,SAASM,EAAcC,GACrB,OAAOA,GAAY,KAAOpX,IACxB,EAAAD,eAAeC,GACf,GAAGA,EAAEwL,cAAgB,KACnB4L,EAASpX,EAAEwL,eACX,EAAAzL,eAGN,SAASmX,EAAuB1L,GAC9BA,EAAa6L,WAAa","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export const NS_SVG = 'http://www.w3.org/2000/svg';\nexport const NS_XHTML = 'http://www.w3.org/1999/xhtml';\nexport const CDATA_END = String.fromCharCode(0x5D, 0x5D, 0x3E);\n\nexport const spaceMatcher = /^\\s*$/;\nexport const trimmableMatcher = /^\\s+|\\s+$/g;\nexport const styleSpaceMatcher = /(?<=^|\\W)\\s+|\\s+(?![\\w\\.\\[\\:\\*#])/g;\n\nexport function round(n: number, c = 0) {\n  c = 10 ** c;\n  return Math.round((n + Number.EPSILON) * c) / c;\n}\n\nexport function getUrl(blob: Blob) {\n  return new Promise<string>((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(blob);\n    reader.addEventListener('loadend', () =>\n      resolve(reader.result as string));\n    reader.addEventListener('error', () =>\n      reject(new Error('Unable to get URL from blob.')));\n  });\n}\n\nexport function getImageDimensions(src: string) {\n  return new Promise<{ width: number; height: number; }>((resolve, reject) => {\n    const img = new Image();\n    img.src = src;\n    img.addEventListener('load', () => resolve({\n      width: img.naturalWidth,\n      height: img.naturalHeight,\n    }));\n    img.addEventListener('error', () =>\n      reject(new Error('Could not load image from src.')));\n  });\n}\n\nexport function clearChildren(node: Node) {\n  node.textContent = '';\n  while(node.hasChildNodes())\n    node.removeChild(node.firstChild!);\n}\n\nexport function formatNumber(n: number, digits: number) {\n  return n.toString(10).padStart(digits, '0');\n}\n\nexport function formatTime(time: number) {\n  const absTime = Math.abs(time);\n  let result = `${\n    formatNumber(Math.floor(absTime / 6e4 % 60), 2)\n  }:${\n    formatNumber(Math.floor(absTime / 1e3 % 60), 2)\n  }`;\n  if(time < 36e5) return (time < 0 ? '-' : '') + result;\n  result = `${\n    formatNumber(Math.floor(absTime / 36e5 % 24), 2)\n  }:${result}`;\n  if(time < 864e5) return (time < 0 ? '-' : '') + result;\n  return `${\n    formatNumber(Math.floor(time / 864e5), 2)\n  }d ${result}`;\n}\n\nexport function formatDateTime(date: Date = new Date()) {\n  const yr = date.getFullYear();\n  const mo = date.getMonth();\n  const dy = date.getDate();\n  const hr = date.getHours();\n  const mi = date.getMinutes();\n  const se = date.getSeconds();\n  return `${\n    formatNumber(dy, 2)\n  }/${\n    formatNumber(mo + 1, 2)\n  }/${\n    formatNumber(yr, 4)\n  } ${\n    formatNumber(hr % 12 || 12, 2)\n  }:${\n    formatNumber(mi, 2)\n  }:${\n    formatNumber(se, 2)\n  } ${hr >= 12 ? 'PM' : 'AM'}`;\n}\n\nexport function getSeed(seed: any): number {\n  switch(typeof seed) {\n    case 'undefined':\n    case 'object':\n      if(seed == null)\n        seed = '';\n    default:\n      seed = seed.toString();\n    case 'string': {\n      let hash = 0;\n      for(let i = 0; i < seed.length; i++)\n        hash = Math.imul(31, hash) + seed.charCodeAt(i) | 0;\n      seed = hash;\n    }\n  }\n  return seed;\n}\n\nexport function transferChildren(src: Element, dest: Element) {\n  if(!src.childElementCount) return;\n  const frag = src.ownerDocument.createDocumentFragment();\n  Array.from(src.childNodes).forEach(frag.appendChild, frag);\n  dest.appendChild(frag);\n}\n\nexport function interceptEvent(e: Event) {\n  if(e.cancelable && !e.defaultPrevented)\n    e.preventDefault();\n  e.stopPropagation();\n}\n\nexport function toPromise<S, T>(thisArg: S, src: (this: S, callback: (result: T) => void) => void): Promise<T>;\nexport function toPromise(thisArg: any, src: (...args: any[]) => void, ...args: any[]): Promise<any>;\nexport function toPromise(thisArg: any, src: (...args: any[]) => void, ...args: any[]) {\n  return new Promise(resolve => src.call(thisArg, ...args, resolve));\n}\n\nexport function findStyle(selector: string, root: (ParentNode & Node) = window.document) {\n  const styleElements = root.querySelectorAll<Element & LinkStyle>('style');\n  let lastSheet: CSSStyleSheet | undefined;\n  for(let i = styleElements.length - 1; i >= 0; i--) {\n    const { sheet } = styleElements[i];\n    if(!sheet) continue;\n    if(!lastSheet) lastSheet = sheet;\n    for(let j = sheet.rules.length - 1; j >= 0; j--) {\n      const rule = sheet.rules[j];\n      if(rule.type !== CSSRule.STYLE_RULE)\n        continue;\n      for(const targetSelector of (rule as CSSStyleRule).selectorText.split(','))\n        if(targetSelector.trim() === selector)\n          return rule as CSSStyleRule;\n    }\n  }\n  if(!lastSheet) {\n    const document = root.ownerDocument ?? root as Document;\n    lastSheet = (\n      (document.documentElement instanceof SVGElement) ?\n      (document.appendChild(document.createElementNS(NS_SVG, 'style')) as SVGStyleElement & LinkStyle) :\n      document.head.appendChild(document.createElement('style'))\n    ).sheet!;\n  }\n  const index = lastSheet.insertRule(`${selector} {}`, lastSheet.rules.length - 1);\n  return lastSheet.cssRules[index] as CSSStyleRule;\n}\n","import { JigsawGenerator } from './puzzle-generator';\nimport { registerDraggable, DraggingState } from './drag-handler';\nimport { formatTime, getUrl, getImageDimensions, clearChildren, NS_SVG, toPromise, interceptEvent, transferChildren, findStyle } from './utils';\nimport { downloadDocument } from './xml-clone';\nimport { showCertificate, hideCetificate } from './certificate';\nimport { registerDropZone } from './dropzone';\n\nconst pathIdMatcher = /^p-(\\d+)-(\\d+)/;\n\ninterface StoredData {\n  width: number;\n  height: number;\n  xCount: number;\n  yCount: number;\n  time: number;\n  startTime?: number;\n  endTime?: number;\n}\n\nexport class MainHandler {\n  document: Document;\n  root: SVGSVGElement;\n  masksElement: SVGGElement;\n  imageElement: SVGImageElement;\n  uiScaleRule: CSSStyleRule;\n  pathGroup: SVGGElement;\n  instanceGroup: SVGGElement;\n  timeDisp: SVGTextElement;\n  dataElement: SVGScriptElement;\n  menuGroup: SVGGElement;\n  menuForm: HTMLFormElement;\n  imageSelector: HTMLInputElement;\n  imagePreview: HTMLImageElement;\n  colSelector: HTMLInputElement;\n  rowSelector: HTMLInputElement;\n  submitButton: HTMLButtonElement;\n  fixedPatternCheckbox: HTMLInputElement;\n  sizeCountDisplay: HTMLSpanElement;\n\n  imageUrl?: string;\n  width: number = 1;\n  height: number = 1;\n  baseTime: number = 0;\n  theshold: number = 3;\n  time: number = 0;\n  startTime?: Date;\n  endTime?: Date;\n  resumeTime?: Date;\n  private _xc: number = 2;\n  private _yc: number = 2;\n  private timer?: number;\n\n  get xCount() {\n    return this._xc;\n  }\n  set xCount(value: number) {\n    this._xc = value;\n    this._yc = Math.round(value / this.width * this.height);\n    if(this._yc < 2 || !Number.isFinite(this._yc)) {\n      this._xc = Math.round(2 / this.height * this.width);\n      this._yc = 2;\n    }\n  } \n\n  get yCount() {\n    return this._yc;\n  }\n  set yCount(value: number) {\n    this._yc = value;\n    this._xc = Math.round(value / this.height * this.width);\n    if(this._xc < 2 || !Number.isFinite(this._xc)) {\n      this._xc = 2;\n      this._yc = Math.round(2 / this.width * this.height);\n    }\n  }\n\n  constructor(root: GlobalEventHandlers & ParentNode & Node = document) {\n    root.querySelector('.noscript')?.classList.remove('noscript');\n    this.root = root.querySelector('svg')!;\n    registerDropZone(this.root);\n    this.document = root instanceof Document ? root : this.root.ownerDocument;\n    this.masksElement = root.querySelector<SVGGElement>('g#ms')!;\n    this.uiScaleRule = findStyle('.ui>*', root);\n    this.pathGroup = root.querySelector<SVGGElement>('g#ps')!;\n    this.instanceGroup = root.querySelector<SVGGElement>('g#ins')!;\n    this.timeDisp = root.querySelector<SVGTextElement>('text#time')!;\n    this.dataElement = root.querySelector<SVGScriptElement>('script#data')!;\n    this.menuGroup = root.querySelector<SVGGElement>('#menu')!;\n    this.menuForm = root.querySelector<HTMLFormElement>('form#menuform')!;\n    this.menuForm.addEventListener('submit', this.onMenuSubmit.bind(this));\n    this.menuForm.addEventListener('reset', this.onMenuReset.bind(this));\n    this.root.addEventListener('paste', this.onPaste.bind(this), true);\n    registerDropZone(this.root.querySelector<SVGElement>('#menu')!, this.onDragDrop.bind(this));\n    this.imageSelector = this.menuForm.querySelector<HTMLInputElement>('input#image-input')!;\n    this.imageSelector.addEventListener('change', this.onImageSelected.bind(this));\n    this.colSelector = this.menuForm.querySelector<HTMLInputElement>('input#col-input')!;\n    const onColChange = this.onColChange.bind(this);\n    this.colSelector.addEventListener('change', onColChange);\n    this.colSelector.addEventListener('blur', onColChange);\n    this.rowSelector = this.menuForm.querySelector<HTMLInputElement>('input#row-input')!;\n    const onRowChange = this.onRowChange.bind(this);\n    this.rowSelector.addEventListener('change', onRowChange);\n    this.rowSelector.addEventListener('blur', onRowChange);\n    this.sizeCountDisplay = this.menuForm.querySelector<HTMLSpanElement>('#size-count')!;\n    this.fixedPatternCheckbox = this.menuForm.querySelector<HTMLInputElement>('input#fixed-pattern')!;\n    this.imagePreview = this.menuForm.querySelector<HTMLImageElement>('img#preview')!;\n    this.submitButton = this.menuForm.querySelector<HTMLButtonElement>('button[type=\"submit\"]')!;\n    this.root.querySelector('#new-game')?.addEventListener('click', this.menu.bind(this));\n    this.root.querySelector('#save-game')?.addEventListener('click', this.save.bind(this));\n    this.imageElement = root.querySelector<SVGImageElement>('image#img')!;\n    window.addEventListener('resize', this.onWindowResize.bind(this));\n    Object.assign(this, registerDraggable(\n      root, this.onDrag.bind(this), this.onDrop.bind(this),\n    ));\n    this.load();\n    this.onWindowResize();\n  }\n\n  async updateImage(blobOrSrc: string | Blob) {\n    const src = blobOrSrc instanceof Blob ? await getUrl(blobOrSrc) : blobOrSrc;\n    const { width, height } = await getImageDimensions(src);\n    this.imageUrl = src;\n    this.width = width;\n    this.height = height;\n    this.xCount = Math.round(width / 100);\n    this.colSelector.valueAsNumber = this.xCount;\n    this.rowSelector.valueAsNumber = this.yCount;\n    this.onSizeChange();\n    if(this.imagePreview.src.startsWith('blob:'))\n      URL.revokeObjectURL(this.imagePreview.src);\n    this.imagePreview.src = blobOrSrc instanceof Blob ? URL.createObjectURL(blobOrSrc) : src;\n    this.submitButton.disabled = false;\n    this.colSelector.disabled = false;\n    this.rowSelector.disabled = false;\n  }\n\n  calculateTheshold() {\n    this.theshold = Math.max(3, Math.sqrt((this.width / this._xc) ** 2 + (this.height / this._yc) ** 2) / 20);\n  }\n\n  init() {\n    clearChildren(this.pathGroup);\n    clearChildren(this.instanceGroup);\n    clearChildren(this.masksElement);\n    hideCetificate();\n    const unitSize = this._xc * 100;\n    this.height *= unitSize / this.width;\n    this.width = unitSize;\n    this.time = 0;\n    this.baseTime = 0;\n    this.startTime = new Date();\n    this.calculateTheshold();\n    delete this.endTime;\n    delete this.resumeTime;\n    this.timeDisp.textContent = '--:--';\n    if(this.timer != null) {\n      clearInterval(this.timer);\n      delete this.timer;\n    }\n    const paths = new JigsawGenerator({\n      width: this.width,\n      height: this.height,\n      xCount: this._xc,\n      yCount: this._yc,\n      radius: Math.min(this.width / this._xc, this.height / this._yc) / 5,\n      fixedPattern: this.fixedPatternCheckbox.checked,\n    }).toSvgElements(this.document, this.pathGroup);\n    const viewWidth = Math.max(640, this.width * 1.5);\n    const viewHeight = Math.max(480, this.height * 1.5);\n    this.root.setAttribute('viewBox', `0 0 ${viewWidth} ${viewHeight}`);\n    this.imageElement.href.baseVal = this.imageUrl!;\n    this.imageElement.setAttribute('width', this.width.toString());\n    this.imageElement.setAttribute('height', this.height.toString());\n    const defs = this.document.createDocumentFragment();\n    const instanceGroup = this.document.createDocumentFragment();\n    for(const path of paths) {\n      const mask = defs.appendChild(this.document.createElementNS(NS_SVG, 'mask'));\n      mask.id = `${path.id}-m`;\n\n      const maskPath = mask.appendChild(this.document.createElementNS(NS_SVG, 'use'));\n      maskPath.href.baseVal = `#${path.id}`;\n\n      const instance = instanceGroup.appendChild(this.document.createElementNS(NS_SVG, 'g'));\n      instance.id = `${path.id}-i`;\n      instance.classList.add('draggable');\n\n      const base = instance.appendChild(this.document.createElementNS(NS_SVG, 'use'));\n      base.href.baseVal = `#${this.imageElement.id}`;\n      base.setAttribute('mask', `url(#${mask.id})`);\n\n      const decoPath = instance.appendChild(this.document.createElementNS(NS_SVG, 'use'));\n      decoPath.classList.add('handler', 'pzoverlay');\n      decoPath.href.baseVal = `#${path.id}`;\n\n      const m = pathIdMatcher.exec(path.id);\n      if(m) {\n        const w = this.width / this._xc;\n        const h = this.height / this._yc;\n        instance.transform.baseVal.appendItem(this.root.createSVGTransform()).setTranslate(\n          Math.round(Math.random() * (viewWidth - w) - parseInt(m[1], 10) * w),\n          Math.round(Math.random() * (viewHeight - h) - parseInt(m[2], 10) * h),\n        );\n      }\n    }\n    this.masksElement.appendChild(defs);\n    this.instanceGroup.appendChild(instanceGroup);\n    this.serializeToData();\n    this.onWindowResize();\n  }\n\n  private onDrag(element: SVGElement) {\n    element.classList.add('grabbing');\n    if(this.timer != null) return;\n    this.resumeTime = new Date();\n    this.timer = window.setInterval(this.updateTime.bind(this), 1000);\n    this.updateTime();\n  }\n\n  private onDrop(state: DraggingState) {\n    state.element.classList.remove('grabbing');\n    const { id } = state.target.parentNode as Element;\n    const m = pathIdMatcher.exec(id);\n    if(!m) return;\n    const x = parseInt(m[1], 10);\n    const y = parseInt(m[2], 10);\n    state.element = this.checkAndMerge(state.element, `#p-${x + 1}-${y}-i`);\n    state.element = this.checkAndMerge(state.element, `#p-${x - 1}-${y}-i`);\n    state.element = this.checkAndMerge(state.element, `#p-${x}-${y + 1}-i`);\n    state.element = this.checkAndMerge(state.element, `#p-${x}-${y - 1}-i`);\n    if(this.instanceGroup.childElementCount > 1)\n      return;\n    this.endTime = new Date();\n    if(this.timer != null) {\n      clearInterval(this.timer);\n      delete this.timer;\n    }\n    const lastElement = this.instanceGroup.querySelector<SVGGraphicsElement>('.draggable.group');\n    if(lastElement) {\n      lastElement.classList.remove('draggable');\n      lastElement.transform.baseVal.removeItem(0);\n    }\n    const viewWidth = Math.max(640, this.width + 20);\n    const viewHeight = Math.max(480, this.height + 40);\n    this.root.setAttribute('viewBox', `0 0 ${viewWidth} ${viewHeight}`);\n    this.onWindowResize();\n    showCertificate(this);\n  }\n\n  private checkAndMerge(current: SVGGraphicsElement, next: string) {\n    const other = this.instanceGroup.querySelector(next)?.closest<SVGGraphicsElement>('.draggable');\n    if(!other || this.isDragging(other) || other === current)\n      return current;\n    const t1 = current.transform.baseVal;\n    if(!t1.numberOfItems) return current;\n    const t2 = other.transform.baseVal;\n    if(!t2.numberOfItems) return current;\n    const m1 = t1.getItem(0).matrix;\n    const m2 = t2.getItem(0).matrix;\n    if(Math.sqrt((m1.e - m2.e) ** 2 + (m1.f - m2.f) ** 2) > this.theshold)\n      return current;\n    const currentIsGroup = current.classList.contains('group');\n    const otherIsGroup = other.classList.contains('group');\n    if(currentIsGroup) {\n      if(!otherIsGroup) {\n        other.classList.remove('draggable');\n        t2.removeItem(0);\n        current.appendChild(other);\n      } else if(other.childElementCount > current.childElementCount) {\n        transferChildren(current, other);\n        current.remove();\n        return other;\n      } else {\n        transferChildren(other, current);\n        other.remove();\n      }\n      return current;\n    }\n    if(otherIsGroup) {\n      current.classList.remove('draggable');\n      t1.removeItem(0);\n      other.appendChild(current);\n      return other;\n    }\n    const newGroup = current.parentNode!.appendChild(this.document.createElementNS(NS_SVG, 'g'));\n    newGroup.classList.add('draggable', 'group');\n    newGroup.appendChild(current);\n    current.classList.remove('draggable');\n    newGroup.appendChild(other);\n    other.classList.remove('draggable');\n    const t = t2.getItem(0);\n    t1.removeItem(0);\n    t2.removeItem(0);\n    newGroup.transform.baseVal.appendItem(t);\n    return newGroup;\n  }\n\n  private isDragging(element: SVGElement) {\n    return false;\n  }\n\n  private updateTime() {\n    this.time = Date.now() - this.resumeTime!.getTime() + this.baseTime;\n    this.timeDisp.textContent = formatTime(this.time);\n  }\n\n  private menu() {\n    this.menuGroup.classList.add('show');\n    this.onSizeChange();\n  }\n\n  private load() {\n    const data: StoredData | null = JSON.parse(this.dataElement.textContent || 'null');\n    if(data == null)\n      return;\n    this.width = data.width || 1;\n    this.height = data.height || 1;\n    this.baseTime = data.time || 0;\n    this._xc = data.xCount || 1;\n    this._yc = data.yCount || 1;\n    if(data.startTime != null)\n      this.startTime = new Date(data.startTime);\n    if(data.endTime != null)\n      this.endTime = new Date(data.endTime);\n    this.calculateTheshold();\n  }\n\n  private serializeToData() {\n    if(this.resumeTime != null && this.endTime == null) this.updateTime();\n    this.dataElement.textContent = JSON.stringify({\n      width: this.width,\n      height: this.height,\n      xCount: this._xc,\n      yCount: this._yc,\n      startTime: this.startTime?.getTime(),\n      endTime: this.endTime?.getTime(),\n      time: this.time,\n    } as StoredData);\n  }\n\n  private save() {\n    this.serializeToData();\n    return downloadDocument(this.root, `puzzle-${Date.now()}.svg`, beforeSave);\n  }\n\n  private onImageSelected() {\n    const { files } = this.imageSelector;\n    if(!files || !files.length) return;\n    const file = files.item(0)!;\n    this.updateImage(file);\n  }\n\n  private onColChange() {\n    this.xCount = this.colSelector.valueAsNumber;\n    this.rowSelector.valueAsNumber = this.yCount;\n    this.colSelector.valueAsNumber = this.xCount;\n    this.onSizeChange();\n  }\n\n  private onRowChange() {\n    this.yCount = this.rowSelector.valueAsNumber;\n    this.colSelector.valueAsNumber = this.xCount;\n    this.rowSelector.valueAsNumber = this.yCount;\n    this.onSizeChange();\n  }\n\n  private onSizeChange() {\n    this.sizeCountDisplay.textContent = `(${this._xc * this._yc} Pieces)`;\n  }\n\n  private async onMenuSubmit(e: Event) {\n    e.preventDefault();\n    if(!this.imageUrl) return;\n    this.init();\n    this.menuForm.reset();\n  }\n\n  private onMenuReset() {\n    if(this.imagePreview.src.startsWith('blob:'))\n      URL.revokeObjectURL(this.imagePreview.src);\n    this.imagePreview.src = '';\n    this.submitButton.disabled = true;\n    this.colSelector.disabled = true;\n    this.rowSelector.disabled = true;\n    this.menuGroup.classList.remove('show');\n  }\n\n  private onWindowResize() {\n    let viewWidth: number, viewHeight: number;\n    if(!this.dataElement.textContent) {\n      if(window.innerWidth > window.innerHeight) {\n        viewHeight = 480;\n        viewWidth = viewHeight / window.innerHeight * window.innerWidth;\n      } else {\n        viewWidth = 640;\n        viewHeight = viewWidth / window.innerWidth * window.innerHeight;\n      }\n      this.root.setAttribute('viewBox', `0 0 ${viewWidth} ${viewHeight}`);\n    } else {\n      const viewBox = this.root.viewBox.baseVal;\n      viewWidth = viewBox.width;\n      viewHeight = viewBox.height;\n    }\n    const viewRatio = viewWidth / viewHeight;\n    const windowRatio = window.innerWidth / window.innerHeight;\n    const scale = (viewRatio > windowRatio ? viewWidth / window.innerWidth : viewHeight / window.innerHeight) * window.devicePixelRatio;\n    this.uiScaleRule.style.transform = `scale(${scale})`;\n  }\n\n  private onPaste(e: ClipboardEvent) {\n    if(this.menuGroup.classList.contains('show') && e.clipboardData && e.clipboardData.files.length) {\n      interceptEvent(e);\n      this.onDragDrop(e.clipboardData);\n    }\n  }\n\n  private async onDragDrop(dataTransfer: DataTransfer) {\n    let loaded = false;\n    for(const item of dataTransfer.items) {\n      switch(item.kind) {\n        case 'file': {\n          if(!item.type.startsWith('image/')) break;\n          const file = item.getAsFile();\n          if(!file) break;\n          try {\n            this.updateImage(file);\n            loaded = true;\n          } catch {}\n          break;\n        }\n        case 'string':\n          switch(item.type) {\n            case 'text/uri-list':\n              for(const row of (await toPromise(item, item.getAsString)).split('\\r\\n'))\n                try {\n                  await this.updateImage(await (await fetch(row)).blob());\n                  loaded = true;\n                  break;\n                } catch {}\n              break;\n          }\n          break;\n      }\n      if(loaded) break;\n    }\n    return loaded;\n  }\n}\n\nnew MainHandler();\n\nfunction beforeSave(root: Element) {\n  root.classList.add('noscript');\n  root.querySelector<SVGGElement>('g#ui')?.transform.baseVal.getItem(0)?.setScale(1, 1);\n}\n","import { NS_SVG, getSeed, round } from './utils';\n// Modified from https://gist.github.com/Draradech/35d36347312ca6d0887aa7d55f366e30\n// Changes: Outputs per-puzzle path instead of one for all.\n\ninterface Stroke {\n  points: number[];\n  inst: string[];\n}\n\nconst svgArgsCount: { [arg: string]: number; } = {\n  M: 2, m: 2,\n  L: 2, l: 2,\n  H: 1, h: 1,\n  V: 1, v: 1,\n  C: 6, c: 6,\n  S: 4, s: 4,\n  Q: 4, q: 4,\n  T: 2, t: 2,\n  A: 7, a: 7,\n  z: 0,\n};\n\nexport interface JigsawGeneratorOptions {\n  width: number;\n  height: number;\n  xCount: number;\n  yCount: number;\n  seed?: any;\n  tabSize?: number;\n  jitter?: number;\n  radius?: number;\n  fixedPattern?: boolean;\n}\n\nexport class JigsawGenerator {\n  cells: string[][];\n  width: number;\n  height: number;\n  xCount: number;\n  yCount: number;\n  seed: number;\n  tabSize: number;\n  jitter: number;\n  radius: number;\n  fixedPattern: number;\n\n  private strokes = new Map<number, Stroke[]>();\n  private a: number = 0;\n  private b: number = 0;\n  private c: number = 0;\n  private d: number = 0;\n  private e: number = 0;\n  private flip: boolean = false;\n  private xi: number;\n  private yi: number;\n  private vertical: boolean;\n  private get sl() { return this.vertical ? this.height / this.yCount : this.width / this.xCount; }\n  private get sw() { return this.vertical ? this.width / this.xCount : this.height / this.yCount; }\n  private get ol() { return this.sl * (this.vertical ? this.yi : this.xi); }\n  private get ow() { return this.sw * (this.vertical ? this.xi : this.yi); }\n\n  constructor(options: JigsawGeneratorOptions) {\n    this.width = options.width;\n    this.height = options.height;\n    this.xCount = options.xCount;\n    this.yCount = options.yCount;\n    this.tabSize = options.tabSize ?? 0.1;\n    this.jitter = options.jitter ?? 0.04;\n    this.seed = getSeed(options.seed ?? Math.trunc(Math.random() * Number.MAX_SAFE_INTEGER));\n    this.radius = Math.min(options.radius ?? 0, this.sl, this.sw);\n    this.fixedPattern = options.fixedPattern ? Math.floor(this.random() * 2 + 1) : 0;\n\n    this.vertical = false;\n    for(this.yi = 1; this.yi < this.yCount; this.yi++) {\n      this.first();\n      for(this.xi = 0; this.xi < this.xCount; this.xi++) {\n        this.next();\n        this.pushStroke(this.xi + this.xCount * (this.yi - 1), this.generateStroke(true));\n        this.pushStroke(this.xi + this.xCount * this.yi, this.generateStroke());\n      }\n    }\n\n    this.vertical = true;\n    for(this.xi = 1; this.xi < this.xCount; this.xi++) {\n      this.first();\n      for(this.yi = 0; this.yi < this.yCount; this.yi++) {\n        this.next();\n        this.pushStroke(this.xi - 1 + this.xCount * this.yi, this.generateStroke());\n        this.pushStroke(this.xi + this.xCount * this.yi, this.generateStroke(true));\n      }\n    }\n\n    this.vertical = false;\n    this.pushStroke(0, {\n      points: [\n        0, round(this.sw, 3),\n        0, this.radius,\n        this.radius, this.radius, 0, 0, 1,\n        this.radius, 0,\n      ],\n      inst: ['M', 'L', 'A'],\n    });\n\n    this.vertical = true;\n    this.pushStroke(this.xCount - 1, {\n      points: [\n        round(this.width - this.sw), 0,\n        this.width - this.radius, 0,\n        this.radius, this.radius, 0, 0, 1,\n        this.width, this.radius,\n      ],\n      inst: ['M', 'L', 'A'],\n    });\n\n    this.vertical = false;\n    this.pushStroke(this.xCount * this.yCount - 1, {\n      points: [\n        this.width, round(this.height - this.sw, 3),\n        this.width, this.height - this.radius,\n        this.radius, this.radius, 0, 0, 1,\n        this.width - this.radius, this.height,\n      ],\n      inst: ['M', 'L', 'A'],\n    });\n\n    this.vertical = true;\n    this.pushStroke(this.xCount * (this.yCount - 1), {\n      points: [\n        round(this.sw, 3), this.height,\n        this.radius, this.height,\n        this.radius, this.radius, 0, 0, 1, 0,\n        this.height - this.radius,\n      ],\n      inst: ['M', 'L', 'A'],\n    });\n\n    this.cells = [];\n    for(const [i, stroke] of this.strokes) {\n      const y = Math.trunc(i / this.xCount);\n      (this.cells[y] ?? (this.cells[y] = []))[i % this.xCount] = this.getNormalizedStroke(stroke);\n    }\n\n    this.strokes.clear();\n  }\n\n  toSvgElements(document: Document, parent?: Node) {\n    const result: SVGPathElement[] = [];\n    const fragment = parent != null ? document.createDocumentFragment() : null;\n    for(let y = 0; y < this.cells.length; y++) {\n      const row = this.cells[y];\n      for(let x = 0; x < row.length; x++) {\n        const elm = document.createElementNS(NS_SVG, 'path');\n        elm.setAttribute('d', row[x]);\n        elm.id = `p-${x}-${y}`;\n        result.push(elm);\n        fragment?.appendChild(elm);\n      }\n    }\n    parent?.appendChild(fragment!);\n    return result;\n  }\n\n  private generateStroke(reverse?: boolean): Stroke {\n    const { a, b, c, d, e, tabSize } = this;\n    const p0l = this.l(0);\n    const p0w = this.w(0);\n    const p1l = this.l(0.2);\n    const p1w = this.w(a);\n    const p2l = this.l(0.5 + b + d);\n    const p2w = this.w(-tabSize + c);\n    const p3l = this.l(0.5 - tabSize + b);\n    const p3w = this.w(tabSize + c);\n    const p4l = this.l(0.5 - 2 * tabSize + b - d);\n    const p4w = this.w(3 * tabSize + c);\n    const p5l = this.l(0.5 + 2 * tabSize + b - d);\n    const p5w = this.w(3 * tabSize + c);\n    const p6l = this.l(0.5 + tabSize + b);\n    const p6w = this.w(tabSize + c);\n    const p7l = this.l(0.5 + b + d);\n    const p7w = this.w(-tabSize + c);\n    const p8l = this.l(0.8);\n    const p8w = this.w(e);\n    const p9l = this.l(1);\n    const p9w = this.w(0);\n    return {\n      points: this.vertical ? reverse ? [\n        p9w, p9l, p8w, p8l, p7w, p7l, p6w, p6l,\n        p5w, p5l, p4w, p4l, p3w, p3l, p2w, p2l,\n        p1w, p1l, p0w, p0l,\n      ] : [\n        p0w, p0l, p1w, p1l, p2w, p2l, p3w, p3l,\n        p4w, p4l, p5w, p5l, p6w, p6l, p7w, p7l,\n        p8w, p8l, p9w, p9l,\n      ] : reverse ? [\n        p9l, p9w, p8l, p8w, p7l, p7w, p6l, p6w,\n        p5l, p5w, p4l, p4w, p3l, p3w, p2l, p2w,\n        p1l, p1w, p0l, p0w,\n      ] : [\n        p0l, p0w, p1l, p1w, p2l, p2w, p3l, p3w,\n        p4l, p4w, p5l, p5w, p6l, p6w, p7l, p7w,\n        p8l, p8w, p9l, p9w,\n      ],\n      inst: ['M', 'C', 'C', 'C'],\n    };\n  }\n\n  private random() {\n    const x = Math.sin(this.seed++) * 10000;\n    return x - Math.floor(x);\n  }\n\n  private nextJitter() {\n    return this.random() * this.jitter * 2 - this.jitter;\n  }\n\n  private first() {\n    this.e = this.nextJitter();\n  }\n\n  private next() {\n    const filp = this.flip;\n    switch(this.fixedPattern) {\n      case 1: case 2:\n        this.flip = (this.xi + this.yi) % 2 === (this.fixedPattern + (this.vertical ? 1 : 0)) % 2;\n        break;\n      default:\n        this.flip = this.random() >= 0.5;\n        break;\n    }\n    this.a = (this.flip === filp ? -this.e : this.e);\n    this.b = this.nextJitter();\n    this.c = this.nextJitter();\n    this.d = this.nextJitter();\n    this.e = this.nextJitter();\n  }\n\n  private l(v: number) {\n    return round(this.ol + this.sl * v, 3);\n  }\n\n  private w(v: number) {\n    return round(this.ow + this.sw * v * (this.flip ? -1 : 1), 3);\n  }\n\n  private pushStroke(i: number, stroke: Stroke) {\n    const strokes = this.strokes.get(i);\n    if(strokes)\n      strokes.push(stroke);\n    else\n      this.strokes.set(i, [stroke]);\n  }\n\n  private getNormalizedStroke(strokes: Stroke[]) {\n    if(strokes == null || !strokes.length)\n      return '';\n    if(strokes.length > 1) {\n      const strokeSet = new Set(strokes);\n      const result: Stroke = { points: [], inst: [] };\n      while(strokeSet.size) {\n        let found = false;\n        for(const other of strokeSet)\n          if(!result.points.length) {\n            result.points = other.points;\n            result.inst = other.inst;\n            found = true;\n            strokeSet.delete(other);\n            break;\n          } else if(\n            Math.abs(result.points[0] - other.points[other.points.length - 2]) < 1 &&\n            Math.abs(result.points[1] - other.points[other.points.length - 1]) < 1\n          ) {\n            result.points.splice(0, 2, ...other.points);\n            result.inst.splice(0, 1, ...other.inst);\n            found = true;\n            strokeSet.delete(other);\n            break;\n          } else if(\n            Math.abs(other.points[0] - result.points[result.points.length - 2]) < 1 &&\n            Math.abs(other.points[1] - result.points[result.points.length - 1]) < 1\n          ) {\n            other.points.splice(0, 2, ...result.points);\n            other.inst.splice(0, 1, ...result.inst);\n            result.points = other.points;\n            result.inst = other.inst;\n            found = true;\n            strokeSet.delete(other);\n            break;\n          }\n        if(!found)\n          break;\n      }\n      strokes = [result];\n    }\n    const { points, inst } = strokes[0];\n    let j = 0;\n    let result = '';\n    for(const i of inst) {\n      result += i;\n      const c = svgArgsCount[i];\n      if(c) result += points.slice(j, j += c).join(' ');\n    }\n    return result + 'z';\n  }\n}\n","import { interceptEvent } from './utils';\n\nexport interface DraggingState {\n  target: SVGGraphicsElement;\n  element: SVGGraphicsElement;\n  identifier?: number;\n  transform: SVGTransform;\n  offsetX: number;\n  offsetY: number;\n  bringToFrontAfter?: boolean;\n}\n\ninterface Pointer {\n  clientX: number;\n  clientY: number;\n  identifier?: number;\n}\n\nexport function registerDraggable(\n  root: GlobalEventHandlers = document,\n  onDrag?: (element: SVGElement) => void,\n  onDrop?: (state: DraggingState) => void,\n  draggableClass = '.draggable', handlerClass = '.handler',\n) {\n  const draggingElements = new Map<SVGElement, DraggingState>();\n  const states = new Map<number | undefined, DraggingState>();\n\n  root.addEventListener('mousedown', onMouseStartDrag, true);\n  root.addEventListener('mousemove', onMouseDragging);\n  root.addEventListener('mouseup', onMouseEndDrag);\n  root.addEventListener('mouseleave', onMouseEndDrag);\n  root.addEventListener('touchstart', onTouchStartDrag, { capture: true, passive: false });\n  root.addEventListener('touchmove', onTouchDragging, { passive: false });\n  root.addEventListener('touchend', onTouchEndDrag, { passive: false });\n  root.addEventListener('touchcancel', onTouchEndDrag, { passive: false });\n\n  function getState(e: Pointer) {\n    const state = states.get(e.identifier);\n    return state && (state.identifier == null) === (e instanceof MouseEvent) ? state : null;\n  }\n\n  function getHandlerTarget(e: Event) {\n    let { target } = e;\n    if(!(target instanceof Element)) return;\n    target = target.closest(`${draggableClass} ${handlerClass}, ${draggableClass}${handlerClass}`);\n    if(target instanceof SVGGraphicsElement)\n      return target;\n  }\n\n  function onMouseStartDrag(e: MouseEvent) {\n    if(e.button !== 0) return;\n    const target = getHandlerTarget(e);\n    if(!target) return;\n    handleStartDrag(target, e, e.ctrlKey || e.shiftKey);\n    interceptEvent(e);\n  }\n\n  function onTouchStartDrag(e: TouchEvent) {\n    const pointer = e.targetTouches.item(0);\n    if(!pointer) return;\n    const target = getHandlerTarget(e);\n    if(!target) return;\n    handleStartDrag(target, pointer, e.ctrlKey || e.shiftKey);\n    interceptEvent(e);\n  }\n\n  function handleStartDrag(target: SVGGraphicsElement, pointer: Pointer, forceBringToFront?: boolean) {\n    const root = target.ownerSVGElement!;\n    const element = target.matches(draggableClass) ? target : target.closest<SVGGraphicsElement>(draggableClass) as SVGGraphicsElement;\n    if(draggingElements.has(element)) return;\n    const transforms = element.transform.baseVal;\n    if(!transforms.numberOfItems || transforms.getItem(0).type !== SVGTransform.SVG_TRANSFORM_TRANSLATE) {\n      const transform = root.createSVGTransform();\n      transform.setTranslate(0, 0);\n      transforms.insertItemBefore(transform, 0);\n    }\n    const transform = transforms.getItem(0);\n    const offset = getLocalPoint(\n      root, pointer, element.parentNode! as SVGGraphicsElement,\n    ).matrixTransform(transform.matrix.inverse());\n    const { identifier } = pointer;\n    const state: DraggingState = {\n      element, target, identifier, transform,\n      offsetX: offset.x,\n      offsetY: offset.y,\n    };\n    draggingElements.set(element, state);\n    states.set(identifier, state);\n    if(element.nextSibling && forceBringToFront)\n      element.parentNode?.appendChild(element);\n    else\n      state.bringToFrontAfter = true;\n    onDrag?.(element);\n  }\n\n  function onMouseDragging(e: MouseEvent) {\n    if(states.size && e.button === 0 && handleDrag(e))\n      interceptEvent(e); \n  }\n\n  function onTouchDragging(e: TouchEvent) {\n    if(states.size &&\n      e.changedTouches.length &&\n      Array.prototype.map.call(e.changedTouches, handleDrag).includes(true))\n      interceptEvent(e);\n  }\n  \n  function handleDrag(e: Pointer) {\n    const state = getState(e);\n    if(!state) return false;\n    const coord = getLocalPoint(\n      state.element.ownerSVGElement!, e,\n      state.element.parentNode! as SVGGraphicsElement,\n    );\n    coord.x -= state.offsetX;\n    coord.y -= state.offsetY;\n    state.transform.setTranslate(coord.x, coord.y);\n    return true;\n  }\n\n  function onMouseEndDrag(e: MouseEvent) {\n    if(states.size && handleEndDrag(e))\n      interceptEvent(e);\n  }\n\n  function onTouchEndDrag(e: TouchEvent) {\n    if(states.size &&\n      e.changedTouches.length &&\n      Array.prototype.map.call(e.changedTouches, handleEndDrag).includes(true))\n      interceptEvent(e);\n  }\n  \n  function handleEndDrag(e: Pointer) {\n    const state = getState(e);\n    if(!state) return false;\n    draggingElements.delete(state.element);\n    states.delete(state.identifier);\n    if(state.bringToFrontAfter)\n      state.element.parentNode?.appendChild(state.element);\n    onDrop?.(state);\n    return true;\n  }\n\n  return {\n    isDragging(element: SVGElement) {\n      return draggingElements.has(element);\n    },\n  };\n}\n\nfunction getLocalPoint(\n  root: SVGSVGElement,\n  pointer: Pointer,\n  base?: DOMMatrix | SVGGraphicsElement | null,\n) {\n  const p = root.createSVGPoint();\n  p.x = pointer.clientX;\n  p.y = pointer.clientY;\n  return base != null ? p.matrixTransform(\n    base instanceof SVGGraphicsElement ?\n    base.getScreenCTM()!.inverse() :\n    base,\n  ) : p;\n}","import { CDATA_END, NS_SVG, NS_XHTML, styleSpaceMatcher, spaceMatcher, trimmableMatcher } from './utils';\n\nexport async function downloadDocument(src: Element, name: string, treatments?: (root: Element, document: Document) => (void | Promise<void>)) {\n  const document = src.ownerDocument;\n  const root = document.implementation.createDocument(NS_SVG, 'svg', null);\n  const clone = root.importNode(src, true);\n  root.replaceChild(clone, root.firstChild!);\n  await Promise.all(Array.prototype.map.call(clone.querySelectorAll('script'), resolveScript));\n  await treatments?.(clone, root);\n  clone.querySelectorAll('style').forEach(minifyStyle);\n  removeWhiteSpaces(root);\n  const blob = new Blob([new XMLSerializer().serializeToString(root)], { type: 'image/svg+xml' });\n  const element = document.createElementNS(NS_XHTML, 'a') as HTMLAnchorElement;\n  element.href = URL.createObjectURL(blob);\n  element.download = name;\n  element.click();\n  URL.revokeObjectURL(element.href);\n}\n\nasync function resolveScript(script: Element) {\n  if(script instanceof HTMLScriptElement) {\n    const { src } = script;\n    if(!src) return;\n    script.removeAttribute('src');\n    script.textContent = await (await fetch(src)).text();\n  } else if(script instanceof SVGScriptElement) {\n    const href = script.href.baseVal;\n    if(!href) return;\n    script.removeAttribute('href');\n    script.appendChild(script.ownerDocument.createCDATASection(await (await fetch(href)).text()));\n  }\n}\n\nfunction removeWhiteSpaces(root: Node) {\n  const document = root.ownerDocument ?? root as Document;\n  const treeWalker = document.createTreeWalker(root, NodeFilter.SHOW_TEXT);\n  const removals: Text[] = [];\n  const checkSpaces: Text[] = [];\n  let current: Node | null;\n  while(current = treeWalker.nextNode()) {\n    if(!(current instanceof Text) || (current instanceof CDATASection))\n      continue;\n    if(spaceMatcher.test(current.wholeText))\n      removals.push(current);\n    else\n      checkSpaces.push(current);\n  }\n  for(const whiteSpace of removals)\n    whiteSpace.remove();\n  for(const text of checkSpaces) {\n    const original = text.wholeText;\n    const changed = original.replaceAll(trimmableMatcher, ' ');\n    if(original !== changed) text.replaceWith(text.ownerDocument.createTextNode(changed));\n  }\n  return root;\n}\n\nfunction minifyStyle(style: Element) {\n  const textContent = style.textContent?.replaceAll(styleSpaceMatcher, '');\n  if(textContent == null) return;\n  try {\n    const child = style.firstChild;\n    if((child instanceof CDATASection) && !textContent.includes(CDATA_END)) {\n      const cdata = style.ownerDocument.createCDATASection(textContent);\n      style.textContent = '';\n      style.appendChild(cdata);\n    } else\n      style.textContent = textContent;\n  } catch {\n    style.textContent = textContent;\n  }\n}\n","import { MainHandler } from '.';\nimport { formatTime, formatDateTime } from './utils';\n\nconst certificate = document.querySelector('#certificate')!;\nconst timeStartElement = certificate.querySelector<SVGTextElement>('text#time-start')!;\nconst timeEndElement = certificate.querySelector<SVGTextElement>('text#time-end')!;\nconst timeUsedElement = certificate.querySelector<SVGTextElement>('text#time-used')!;\nconst puzzleSizeElement = certificate.querySelector<SVGTextElement>('text#puzzle-size')!;\n\nexport function showCertificate(mainHandler: MainHandler) {\n  certificate.classList.add('show');\n  certificate.setAttribute('visibility', 'visible');\n  certificate.setAttribute('pointer-events', 'visible');\n  timeStartElement.textContent = formatDateTime(mainHandler.startTime);\n  timeEndElement.textContent = formatDateTime(mainHandler.endTime);\n  timeUsedElement.textContent = formatTime(mainHandler.time);\n  puzzleSizeElement.textContent = `${mainHandler.xCount}×${mainHandler.yCount} (${mainHandler.xCount * mainHandler.yCount} Pieces)`;\n}\n\nexport function hideCetificate() {\n  certificate.classList.remove('show');\n  timeStartElement.textContent = '';\n  timeEndElement.textContent = '';\n  timeUsedElement.textContent = '';\n  puzzleSizeElement.textContent = '';\n}","import { interceptEvent } from './utils';\n\nexport function registerDropZone(\n  element: GlobalEventHandlers,\n  dropCallback?: (dataTransfer: DataTransfer) => void,\n  dragEnterCallback?: ((dataTransfer: DataTransfer) => void) | null,\n  dragOverCallback?: ((dataTransfer: DataTransfer) => void) | null,\n  dragLeaveCallback?: ((dataTransfer: DataTransfer) => void) | null,\n) {\n  const dragOverFallbackHandler = dropCallback != null ? null : defaultDragOverHandler;\n  element.addEventListener('dragenter', wrapDragEvent(dragEnterCallback ?? dragOverFallbackHandler));\n  element.addEventListener('dragover', wrapDragEvent(dragOverCallback ?? dragOverFallbackHandler));\n  element.addEventListener('dragleave', wrapDragEvent(dragLeaveCallback));\n  element.addEventListener('drop', wrapDragEvent(dropCallback));\n}\n\nfunction wrapDragEvent(callback?: ((dataTransfer: DataTransfer) => void) | null): (e: DragEvent) => void {\n  return callback != null ? e => {\n    interceptEvent(e);\n    if(e.dataTransfer != null)\n      callback(e.dataTransfer);\n  } : interceptEvent;\n}\n\nfunction defaultDragOverHandler(dataTransfer: DataTransfer) {\n  dataTransfer.dropEffect = 'none';\n}\n"],"sourceRoot":""}